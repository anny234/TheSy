(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(declare-fun last (Lst) Nat)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x12 ?__y13) (or (= ?__x12 ?__y13) (less ?__x12 ?__y13)))
(=> rule1 (or (= ?__x12 ?__y13) (less ?__x12 ?__y13)) (leq ?__x12 ?__y13))
(=> rule2 (last (cons ?x14 ?y)) (ite (= ?y nil) ?x14 (last ?y)))
(=> rule3 (ite (= ?y nil) ?x14 (last ?y)) (last (cons ?x14 ?y)))
(prove (forall ((xs Lst)(x15 Nat)) (= (=> (= xs nil) (= (last (cons x15 xs)) x15)) true)))
