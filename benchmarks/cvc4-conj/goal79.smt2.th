(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(declare-fun less (Nat Nat) Bool)
(declare-fun insort (Nat Lst) Lst)
(declare-fun sorted (Lst) Bool)
(declare-fun sort (Lst) Lst)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x455 ?__y456) (or (= ?__x455 ?__y456) (less ?__x455 ?__y456)))
(=> rule1 (or (= ?__x455 ?__y456) (less ?__x455 ?__y456)) (leq ?__x455 ?__y456))
(=> rule2 (less ?x457 zero) false)
(=> rule3 (less zero (succ ?x458)) true)
(=> rule4 (less (succ ?x459) (succ ?y460)) (less ?x459 ?y460))
(=> rule5 (less ?x459 ?y460) (less (succ ?x459) (succ ?y460)))
(=> rule6 (insort ?i nil) (cons ?i nil))
(=> rule7 (cons ?i nil) (insort ?i nil))
(=> rule8 (insort ?i (cons ?x461 ?y)) (ite (less ?i ?x461) (cons ?i (cons ?x461 ?y)) (cons ?x461 (insort ?i ?y))))
(=> rule9 (ite (less ?i ?x461) (cons ?i (cons ?x461 ?y)) (cons ?x461 (insort ?i ?y))) (insort ?i (cons ?x461 ?y)))
(=> rule10 (sorted nil) true)
(=> rule11 true (sorted nil))
(=> rule12 (sorted (cons ?x462 nil)) true)
(=> rule13 (sorted (cons ?x463 (cons ?z464 ?y))) (and (sorted (cons ?z464 ?y)) (or (= ?x463 ?z464) (less ?x463 ?z464))))
(=> rule14 (and (sorted (cons ?z464 ?y)) (or (= ?x463 ?z464) (less ?x463 ?z464))) (sorted (cons ?x463 (cons ?z464 ?y))))
(=> rule15 (sort nil) nil)
(=> rule16 nil (sort nil))
(=> rule17 (sort (cons ?x465 ?y)) (insort ?x465 (sort ?y)))
(=> rule18 (insort ?x465 (sort ?y)) (sort (cons ?x465 ?y)))
(prove (forall ((l Lst)(x466 Nat)) (= (=> (sorted l) (sorted (insort x466 l))) true)))
