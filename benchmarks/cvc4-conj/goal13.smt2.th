(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(declare-fun drop (Nat Lst) Lst)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x379 ?__y380) (or (= ?__x379 ?__y380) (less ?__x379 ?__y380)))
(=> rule1 (or (= ?__x379 ?__y380) (less ?__x379 ?__y380)) (leq ?__x379 ?__y380))
(=> rule2 (drop ?x381 nil) nil)
(=> rule3 (drop zero ?x) ?x)
(=> rule4 (drop (succ ?x382) (cons ?y383 ?z)) (drop ?x382 ?z))
(prove (forall ((xs Lst)(x384 Nat)(n Nat)) (= (drop (succ n) (cons x384 xs)) (drop n xs))))
