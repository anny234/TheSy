(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(declare-fun drop (Nat Lst) Lst)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x184 ?__y185) (or (= ?__x184 ?__y185) (less ?__x184 ?__y185)))
(=> rule1 (or (= ?__x184 ?__y185) (less ?__x184 ?__y185)) (leq ?__x184 ?__y185))
(=> rule2 (drop ?x186 nil) nil)
(=> rule3 (drop zero ?x) ?x)
(=> rule4 (drop (succ ?x187) (cons ?y188 ?z)) (drop ?x187 ?z))
(prove (forall ((xs Lst)) (= (drop zero xs) xs)))
