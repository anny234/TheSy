(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(declare-fun last (Lst) Nat)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x524 ?__y525) (or (= ?__x524 ?__y525) (less ?__x524 ?__y525)))
(=> rule1 (or (= ?__x524 ?__y525) (less ?__x524 ?__y525)) (leq ?__x524 ?__y525))
(=> rule2 (last (cons ?x526 ?y)) (ite (= ?y nil) ?x526 (last ?y)))
(=> rule3 (ite (= ?y nil) ?x526 (last ?y)) (last (cons ?x526 ?y)))
(prove (forall ((xs Lst)(x527 Nat)) (= (=> (not (= xs nil)) (= (last (cons x527 xs)) (last xs))) true)))
