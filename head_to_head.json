{"20": {"hipster < thesy": {"summary": "3/7", "goals": ["(forall ((x U)) (= (<=2 x x) true))", "(forall ((x U) (y U)) (= (len (insort x y)) (S (len y))))", "(forall ((x U)) (= (<=2 x (S x)) true))", "(forall ((x U)) (= (not (<=2 (S x) x)) true))", "(forall ((x U) (y U)) (=> (<=2 y x) (= (not (<=2 (S x) y)) true)))", "(forall ((x U) (y U)) (=> (<=2 x y) (= (<=2 x (S y)) true)))", "(forall ((x U)) (= (len (sort x)) (len x)))"], "proved": ["(<=2 x x) = true", "(<=2 x (S x)) = true", "(not (<=2 (S x) x)) = true"]}, "thesy < hipster": {"summary": "2/3", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))"], "proved": ["(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "21": {"hipster < thesy": {"summary": "0/12", "goals": ["(forall ((x U)) (= (+2 x x) true))", "(forall ((x U)) (= (<=2 x Z) (x)))", "(forall ((x U)) (= (+2 x (S x)) true))", "(forall ((x U)) (= (not (+2 (S x) x)) true))", "(forall ((x U) (y U)) (=> (+2 y x) (= (not (+2 (S x) y)) true)))", "(forall ((x U) (y U)) (=> (+2 x y) (= (+2 x (S y)) true)))", "(forall ((x U) (y U)) (= (<=2 x (S y)) (S (<=2 x y))))", "(forall ((x U) (y U)) (= (+2 x (<=2 x y)) true))", "(forall ((x U) (y U)) (= (+2 y (<=2 x y)) true))", "(forall ((x U) (y U)) (= (+2 (<=2 x y) y) (+2 (<=2 y x) y)))", "(forall ((x U) (y U) (z U)) (= (+2 (<=2 x y) x) (+2 (<=2 z y) z)))", "(forall ((x U) (y U)) (= (<=2 y x) (<=2 x y)))"], "proved": []}, "thesy < hipster": {"summary": "0/24", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (<=2 ts_ph_Nat_1 Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_0) Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_0) Z) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (<=2 (S Z) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0)) (<=2 ts_ph_Nat_1 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z)) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (<=2 (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S Z) ts_ph_Nat_0) (<=2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_1) (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (<=2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 ts_ph_Nat_1 ts_ph_Nat_0) (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (<=2 ts_ph_Nat_1 ts_ph_Nat_0)))"], "proved": []}}, "22": {"hipster < thesy": {"summary": "5/5", "goals": ["(forall ((x U) (y U)) (= (max y x) (max x y)))", "(forall ((x U)) (= (max x x) (x)))", "(forall ((x U)) (= (max x (S x)) (S x)))", "(forall ((x U) (y U)) (= (max x (max x y)) (max x y)))", "(forall ((x U)) (= (max x (S (S x))) (S (S x))))"], "proved": ["(max y x) = (max x y)", "(max x x) = x", "(max x (S x)) = (S x)", "(max x (max x y)) = (max x y)", "(max x (S (S x))) = (S (S x))"]}, "thesy < hipster": {"summary": "0/13", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 Z) (max ts_ph_Nat_0 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_0) (max ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max (S ts_ph_Nat_1) ts_ph_Nat_0) (max ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 (S ts_ph_Nat_1)) (max (S ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (S ts_ph_Nat_0) (max (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max (S ts_ph_Nat_0) ts_ph_Nat_0) (S ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_1 ts_ph_Nat_0) (max ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_1) (max ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_1) (max ts_ph_Nat_1 (max ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_1 (max ts_ph_Nat_0 ts_ph_Nat_1)) (max ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_1 (S ts_ph_Nat_0)) (max (max ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max (max ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0)) (max ts_ph_Nat_1 (S ts_ph_Nat_0))))"], "proved": []}}, "23": {"hipster < thesy": {"summary": "5/5", "goals": ["(forall ((x U) (y U)) (= (max y x) (max x y)))", "(forall ((x U)) (= (max x x) (x)))", "(forall ((x U)) (= (max x (S x)) (S x)))", "(forall ((x U) (y U)) (= (max x (max x y)) (max x y)))", "(forall ((x U)) (= (max x (S (S x))) (S (S x))))"], "proved": ["(max y x) = (max x y)", "(max x x) = x", "(max x (S x)) = (S x)", "(max x (max x y)) = (max x y)", "(max x (S (S x))) = (S (S x))"]}, "thesy < hipster": {"summary": "0/13", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_0) (max ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 Z) (max ts_ph_Nat_0 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (S ts_ph_Nat_0) (max (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max (S ts_ph_Nat_0) ts_ph_Nat_0) (S ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max (S Z) ts_ph_Nat_0) (max ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 (S Z)) (max (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_1 ts_ph_Nat_0) (max ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_1) (max ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_1) (max ts_ph_Nat_1 (max ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_1 (max ts_ph_Nat_0 ts_ph_Nat_1)) (max ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max (max ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0)) (max ts_ph_Nat_1 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_1 (S ts_ph_Nat_0)) (max (max ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0))))"], "proved": []}}, "01": {"hipster < thesy": {"summary": "2/2", "goals": ["(forall ((x2 U) (z U)) (= (take z (take z x2)) (take z x2)))", "(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))"], "proved": ["(take z (take z x2)) = (take z x2)", "(++ (++ z x2) x3) = (++ z (++ x2 x3))"]}, "thesy < hipster": {"summary": "0/16", "goals": ["(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (drop ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0)) ()))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (drop (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0)) ()))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (drop (S ts_ph_Nat_1) ts_ph_list_0) (drop (S Z) (drop ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (drop (S Z) (drop ts_ph_Nat_1 ts_ph_list_0)) (drop (S ts_ph_Nat_1) ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (take (S Z) (++ ts_ph_list_0 ts_ph_list_0)) (take (S Z) ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (take (S Z) ts_ph_list_0) (take (S Z) (++ ts_ph_list_0 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (++ (take ts_ph_Nat_1 ts_ph_list_0) (drop ts_ph_Nat_1 ts_ph_list_0)) ts_ph_list_0))"], "proved": []}}, "02": {"hipster < thesy": {"summary": "9/11", "goals": ["(forall ((x2 U) (z U)) (=> (== x2 z) (= (z) (x2))))", "(forall ((z U)) (= (== z z) true))", "(forall ((z U)) (= (+2 z Z) (z)))", "(forall ((x2 U) (z U)) (= (+2 z (S x2)) (S (+2 z x2))))", "(forall ((z U)) (= (not (== z (S z))) true))", "(forall ((x2 U) (x3 U) (z U)) (= (+2 (+2 z x2) x3) (+2 z (+2 x2 x3))))", "(forall ((x2 U) (z U)) (= (== z (+2 x2 z)) (== x2 Z)))", "(forall ((x2 U) (x3 U) (z U)) (= (== z (+2 x3 z)) (== x2 (+2 x2 x3))))", "(forall ((x2 U) (x3 U) (x4 U)) (= (++ (++ x2 x3) x4) (++ x2 (++ x3 x4))))", "(forall ((z U)) (= (not (== z (S (S z)))) true))", "(forall ((x2 U) (z U)) (= (+2 x2 z) (+2 z x2)))"], "proved": ["(== z z) = true", "(+2 z Z) = z", "(+2 z (S x2)) = (S (+2 z x2))", "(not (== z (S z))) = true", "(+2 (+2 z x2) x3) = (+2 z (+2 x2 x3))", "(== z (+2 x2 z)) = (== x2 Z)", "(== z (+2 x3 z)) = (== x2 (+2 x2 x3))", "(++ (++ x2 x3) x4) = (++ x2 (++ x3 x4))", "(+2 x2 z) = (+2 z x2)"]}, "thesy < hipster": {"summary": "1/30", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (== Z ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (== (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (== ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U)) (= (== Z (2 ts_ph_Nat_0 ts_ph_Nat_0)) (== ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_0)) (== Z (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (== ts_ph_Nat_1 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 ts_ph_Nat_0) (== ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2)) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (== ts_ph_Nat_0 ts_ph_Nat_1)))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true"]}}, "03": {"hipster < thesy": {"summary": "5/9", "goals": ["(forall ((x2 U) (z U)) (=> (== x2 z) (= (z) (x2))))", "(forall ((z U)) (= (<=2 z z) true))", "(forall ((z U)) (= (== z z) true))", "(forall ((x2 U) (z U)) (=> (<=2 z x2) (= (<=2 x2 z) (== z x2))))", "(forall ((z U)) (= (<=2 z (S z)) true))", "(forall ((z U)) (= (not (<=2 (S z) z)) true))", "(forall ((x2 U) (z U)) (=> (<=2 x2 z) (= (not (<=2 (S z) x2)) true)))", "(forall ((x2 U) (z U)) (=> (<=2 z x2) (= (<=2 z (S x2)) true)))", "(forall ((x2 U) (x3 U) (x4 U)) (= (++ (++ x2 x3) x4) (++ x2 (++ x3 x4))))"], "proved": ["(<=2 z z) = true", "(== z z) = true", "(<=2 z (S z)) = true", "(not (<=2 (S z) z)) = true", "(++ (++ x2 x3) x4) = (++ x2 (++ x3 x4))"]}, "thesy < hipster": {"summary": "3/15", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))"], "proved": ["(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "04": {"hipster < thesy": {"summary": "1/3", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U)) (= (not (== y (S (S y)))) true))"], "proved": ["(== y y) = true"]}, "thesy < hipster": {"summary": "1/7", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true"]}}, "05": {"hipster < thesy": {"summary": "2/4", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U)) (= (not (== y (S y))) true))", "(forall ((y U)) (= (not (== y (S (S y)))) true))"], "proved": ["(== y y) = true", "(not (== y (S y))) = true"]}, "thesy < hipster": {"summary": "1/8", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true"]}}, "06": {"hipster < thesy": {"summary": "1/11", "goals": ["(forall ((x U)) (= (+2 x x) (Z)))", "(forall ((x U)) (= (-2 x Z) (x)))", "(forall ((x U)) (= (+2 x (S x)) (Z)))", "(forall ((x U)) (= (+2 (S x) x) (S Z)))", "(forall ((x U) (y U)) (= (-2 x (S y)) (S (-2 x y))))", "(forall ((x U) (y U)) (= (+2 x (-2 x y)) (Z)))", "(forall ((x U) (y U)) (= (+2 y (-2 x y)) (Z)))", "(forall ((x U) (y U) (z U)) (= (+2 (+2 x y) z) (+2 x (-2 y z))))", "(forall ((x U) (y U)) (= (+2 (-2 y x) y) (+2 x (+2 y y))))", "(forall ((x U) (y U)) (= (+2 (-2 y x) x) (y)))", "(forall ((x U) (y U)) (= (-2 x (+2 y x)) (-2 y (+2 x y))))"], "proved": ["(-2 x Z) = x"]}, "thesy < hipster": {"summary": "0/19", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) (2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) (-2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) ts_ph_Nat_1))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_0)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_1) (2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (-2 (S Z) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0)) (-2 ts_ph_Nat_1 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S Z) ts_ph_Nat_0) (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_1 ts_ph_Nat_0) (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_1) (-2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (-2 ts_ph_Nat_0 ts_ph_Nat_1)))"], "proved": []}}, "07": {"hipster < thesy": {"summary": "2/11", "goals": ["(forall ((x U)) (= (+2 x x) (Z)))", "(forall ((x U)) (= (-2 x Z) (x)))", "(forall ((x U)) (= (+2 x (S x)) (Z)))", "(forall ((x U)) (= (+2 (S x) x) (S Z)))", "(forall ((x U) (y U)) (= (-2 x (S y)) (S (-2 x y))))", "(forall ((x U) (y U)) (= (+2 x (-2 x y)) (Z)))", "(forall ((x U) (y U)) (= (+2 y (-2 x y)) (Z)))", "(forall ((x U) (y U) (z U)) (= (+2 (+2 x y) z) (+2 x (-2 y z))))", "(forall ((x U) (y U)) (= (+2 (-2 y x) y) (+2 x (+2 y y))))", "(forall ((x U) (y U)) (= (+2 (-2 y x) x) (y)))", "(forall ((x U) (y U)) (= (-2 x (+2 y x)) (-2 y (+2 x y))))"], "proved": ["(-2 x Z) = x", "(-2 x (+2 y x)) = (-2 y (+2 x y))"]}, "thesy < hipster": {"summary": "0/21", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) (-2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) (2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (-2 ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) ts_ph_Nat_1))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_0)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_1) (2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (-2 (S Z) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0)) (-2 ts_ph_Nat_1 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_1) (-2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (-2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (-2 ts_ph_Nat_0 ts_ph_Nat_2) ts_ph_Nat_1) (2 ts_ph_Nat_1 (-2 ts_ph_Nat_0 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_1 (-2 ts_ph_Nat_0 ts_ph_Nat_2)) (2 (-2 ts_ph_Nat_0 ts_ph_Nat_2) ts_ph_Nat_1)))"], "proved": []}}, "08": {"hipster < thesy": {"summary": "2/11", "goals": ["(forall ((x U)) (= (+2 x x) (Z)))", "(forall ((x U)) (= (-2 x Z) (x)))", "(forall ((x U)) (= (+2 x (S x)) (Z)))", "(forall ((x U)) (= (+2 (S x) x) (S Z)))", "(forall ((x U) (y U)) (= (-2 x (S y)) (S (-2 x y))))", "(forall ((x U) (y U)) (= (+2 x (-2 x y)) (Z)))", "(forall ((x U) (y U)) (= (+2 y (-2 x y)) (Z)))", "(forall ((x U) (y U) (z U)) (= (+2 (+2 x y) z) (+2 x (-2 y z))))", "(forall ((x U) (y U)) (= (+2 (-2 y x) y) (+2 x (+2 y y))))", "(forall ((x U) (y U)) (= (+2 (-2 y x) x) (y)))", "(forall ((x U) (y U)) (= (-2 x (+2 y x)) (-2 y (+2 x y))))"], "proved": ["(-2 x Z) = x", "(-2 x (+2 y x)) = (-2 y (+2 x y))"]}, "thesy < hipster": {"summary": "0/18", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) (2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) (-2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) ts_ph_Nat_1))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (-2 (S Z) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0)) (-2 ts_ph_Nat_1 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S Z) ts_ph_Nat_0) (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_1) (-2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (-2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (-2 ts_ph_Nat_0 ts_ph_Nat_2) ts_ph_Nat_1) (2 ts_ph_Nat_1 (-2 ts_ph_Nat_0 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_1 (-2 ts_ph_Nat_0 ts_ph_Nat_2)) (2 (-2 ts_ph_Nat_0 ts_ph_Nat_2) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2)) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2))))"], "proved": []}}, "09": {"hipster < thesy": {"summary": "2/11", "goals": ["(forall ((x U)) (= (+2 x x) (Z)))", "(forall ((x U)) (= (-2 x Z) (x)))", "(forall ((x U)) (= (+2 x (S x)) (Z)))", "(forall ((x U)) (= (+2 (S x) x) (S Z)))", "(forall ((x U) (y U)) (= (-2 x (S y)) (S (-2 x y))))", "(forall ((x U) (y U)) (= (+2 x (-2 x y)) (Z)))", "(forall ((x U) (y U)) (= (+2 y (-2 x y)) (Z)))", "(forall ((x U) (y U) (z U)) (= (+2 (+2 x y) z) (+2 x (-2 y z))))", "(forall ((x U) (y U)) (= (+2 (-2 y x) y) (+2 x (+2 y y))))", "(forall ((x U) (y U)) (= (+2 (-2 y x) x) (y)))", "(forall ((x U) (y U)) (= (-2 x (+2 y x)) (-2 y (+2 x y))))"], "proved": ["(-2 x Z) = x", "(-2 x (+2 y x)) = (-2 y (+2 x y))"]}, "thesy < hipster": {"summary": "0/19", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) (-2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) (2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (-2 (S Z) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_2 (-2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2) (2 ts_ph_Nat_2 (-2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) ts_ph_Nat_1))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (-2 ts_ph_Nat_1 ts_ph_Nat_0)) (2 ts_ph_Nat_1 (-2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 (-2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (-2 ts_ph_Nat_1 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_1)) (-2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) (S Z)) (-2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) (S Z))))"], "proved": []}}, "10": {"hipster < thesy": {"summary": "4/5", "goals": ["(forall ((x U)) (= (-2 x x) (Z)))", "(forall ((x U)) (= (-2 x (S x)) (Z)))", "(forall ((x U)) (= (-2 (S x) x) (S Z)))", "(forall ((x U)) (= (-2 x (S (S x))) (Z)))", "(forall ((x U)) (= (-2 (S (S x)) x) (S (S Z))))"], "proved": ["(-2 x x) = Z", "(-2 x (S x)) = Z", "(-2 (S x) x) = (S Z)", "(-2 x (S (S x))) = Z"]}, "thesy < hipster": {"summary": "3/7", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_1 (S ts_ph_Nat_0)) (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z)) (-2 ts_ph_Nat_1 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) ts_ph_Nat_1) Z))"], "proved": ["(-2 ts_ph_Nat_0 ts_ph_Nat_0) = Z", "(-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = Z", "(-2 (S ts_ph_Nat_0) ts_ph_Nat_0) = (S Z)"]}}, "11": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/5", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S ts_ph_Nat_0) ts_ph_list_1) (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1)) (drop (S ts_ph_Nat_0) ts_ph_list_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1)) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1)) (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1))))"], "proved": []}}, "12": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/7", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U) (ts_ph_fun1_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_0 (map2 ts_ph_fun1_1 ts_ph_list_1)) (map2 ts_ph_fun1_1 (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_fun1_1 U) (ts_ph_list_1 U)) (= (map2 ts_ph_fun1_1 (drop ts_ph_Nat_0 ts_ph_list_1)) (drop ts_ph_Nat_0 (map2 ts_ph_fun1_1 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S ts_ph_Nat_0) ts_ph_list_1) (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1)) (drop (S ts_ph_Nat_0) ts_ph_list_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1)) (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1)) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1))))"], "proved": []}}, "13": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/5", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1)) (drop (S ts_ph_Nat_0) ts_ph_list_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S ts_ph_Nat_0) ts_ph_list_1) (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1)) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1)) (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1))))"], "proved": []}}, "14": {"hipster < thesy": {"summary": "1/1", "goals": ["(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))"], "proved": ["(++ (++ z x2) x3) = (++ z (++ x2 x3))"]}, "thesy < hipster": {"summary": "0/3", "goals": ["(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))"], "proved": []}}, "15": {"hipster < thesy": {"summary": "2/7", "goals": ["(forall ((x U)) (= (not (<2 x x)) true))", "(forall ((x U) (y U)) (=> (<2 y x) (= (not (<2 x y)) true)))", "(forall ((x U) (y U)) (= (len (ins x y)) (S (len y))))", "(forall ((x U)) (= (<2 x (S x)) true))", "(forall ((x U) (y U)) (=> (<2 y x) (= (not (<2 (S x) y)) true)))", "(forall ((x U) (y U)) (=> (<2 x y) (= (<2 x (S y)) true)))", "(forall ((x U) (y U)) (=> (<2 y x) (= (not (<2 x (S y))) true)))"], "proved": ["(not (<2 x x)) = true", "(<2 x (S x)) = true"]}, "thesy < hipster": {"summary": "1/3", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))"], "proved": ["(<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "16": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/2", "goals": ["(forall ((ts_ph_list_0 U)) (= (last (cons Z ts_ph_list_0)) (last ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (last ts_ph_list_0) (last (cons Z ts_ph_list_0))))"], "proved": []}}, "17": {"hipster < thesy": {"summary": "4/8", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (<=2 y y) true))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 z y) (== y z))))", "(forall ((y U)) (= (<=2 y (S y)) true))", "(forall ((y U)) (= (not (<=2 (S y) y)) true))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (not (<=2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 y (S z)) true)))"], "proved": ["(<=2 y y) = true", "(== y y) = true", "(<=2 y (S y)) = true", "(not (<=2 (S y) y)) = true"]}, "thesy < hipster": {"summary": "3/13", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "18": {"hipster < thesy": {"summary": "0/12", "goals": ["(forall ((x U)) (= (not (+2 x x)) true))", "(forall ((x U) (y U)) (=> (+2 y x) (= (not (+2 x y)) true)))", "(forall ((x U)) (= (<2 x Z) (x)))", "(forall ((x U)) (= (+2 x (S x)) true))", "(forall ((x U) (y U)) (=> (+2 y x) (= (not (+2 (S x) y)) true)))", "(forall ((x U) (y U)) (=> (+2 x y) (= (+2 x (S y)) true)))", "(forall ((x U) (y U)) (=> (+2 y x) (= (not (+2 x (S y))) true)))", "(forall ((x U) (y U)) (= (<2 x (S y)) (S (<2 x y))))", "(forall ((x U) (y U)) (= (+2 x (<2 y x)) (+2 Z y)))", "(forall ((x U) (y U) (z U)) (= (+2 x (<2 z x)) (+2 y (<2 y z))))", "(forall ((x U) (y U)) (= (not (+2 (<2 y x) y)) true))", "(forall ((x U) (y U)) (= (<2 y x) (<2 x y)))"], "proved": []}, "thesy < hipster": {"summary": "0/23", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (S ts_ph_Nat_0) (2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 (S Z)) (S ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (<2 Z ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (<2 Z ts_ph_Nat_0) (<2 Z (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 Z (2 ts_ph_Nat_0 ts_ph_Nat_0)) (<2 Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S Z)) (<2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z)) (<2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (<2 Z (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 Z (2 ts_ph_Nat_0 ts_ph_Nat_0)) (<2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2)) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 (S ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (<2 (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_1)) (<2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (<2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 ts_ph_Nat_1 ts_ph_Nat_0) (<2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0))))"], "proved": []}}, "19": {"hipster < thesy": {"summary": "4/6", "goals": ["(forall ((x U)) (= (-2 x x) (Z)))", "(forall ((x U)) (= (-2 x (S x)) (Z)))", "(forall ((x U)) (= (-2 (S x) x) (S Z)))", "(forall ((y U) (z U)) (= (-2 (len z) y) (len (drop y z))))", "(forall ((x U)) (= (-2 x (S (S x))) (Z)))", "(forall ((x U)) (= (-2 (S (S x)) x) (S (S Z))))"], "proved": ["(-2 x x) = Z", "(-2 x (S x)) = Z", "(-2 (S x) x) = (S Z)", "(-2 x (S (S x))) = Z"]}, "thesy < hipster": {"summary": "0/13", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_list_0 U)) (= (drop (len ts_ph_list_0) ts_ph_list_0) ()))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1)) (drop (S ts_ph_Nat_0) ts_ph_list_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S ts_ph_Nat_0) ts_ph_list_1) (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1)) (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1)) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_1 (S ts_ph_Nat_0)) (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z)) (-2 ts_ph_Nat_1 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) ts_ph_Nat_1) Z))"], "proved": []}}, "24": {"hipster < thesy": {"summary": "7/15", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U) (z U)) (= (max z y) (max y z)))", "(forall ((y U)) (= (max y y) (y)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (max y z) (z))))", "(forall ((y U)) (= (<=2 y y) true))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 z y) (== y z))))", "(forall ((y U)) (= (max y (S y)) (S y)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (max (S z) y) (S z))))", "(forall ((y U)) (= (<=2 y (S y)) true))", "(forall ((y U)) (= (not (<=2 (S y) y)) true))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (not (<=2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 y (S z)) true)))", "(forall ((y U) (z U)) (= (max y (max y z)) (max y z)))", "(forall ((y U) (z U)) (= (<=2 y (max y z)) true))"], "proved": ["(max z y) = (max y z)", "(max y y) = y", "(<=2 y y) = true", "(== y y) = true", "(max y (S y)) = (S y)", "(<=2 y (S y)) = true", "(not (<=2 (S y) y)) = true"]}, "thesy < hipster": {"summary": "3/25", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_0) (max ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 Z) (max ts_ph_Nat_0 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 (S ts_ph_Nat_1)) (max (S ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max (S ts_ph_Nat_1) ts_ph_Nat_0) (max ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (S ts_ph_Nat_0) (max (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max (S ts_ph_Nat_0) ts_ph_Nat_0) (S ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_1)) (== (S ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (S ts_ph_Nat_1) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_1) (max ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_1 ts_ph_Nat_0) (max ts_ph_Nat_0 ts_ph_Nat_1)))"], "proved": ["(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "25": {"hipster < thesy": {"summary": "7/15", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U) (z U)) (= (max z y) (max y z)))", "(forall ((y U)) (= (max y y) (y)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (max y z) (z))))", "(forall ((y U)) (= (<=2 y y) true))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 z y) (== y z))))", "(forall ((y U)) (= (max y (S y)) (S y)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (max (S z) y) (S z))))", "(forall ((y U)) (= (<=2 y (S y)) true))", "(forall ((y U)) (= (not (<=2 (S y) y)) true))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (not (<=2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 y (S z)) true)))", "(forall ((y U) (z U)) (= (max y (max y z)) (max y z)))", "(forall ((y U) (z U)) (= (<=2 y (max y z)) true))"], "proved": ["(max z y) = (max y z)", "(max y y) = y", "(<=2 y y) = true", "(== y y) = true", "(max y (S y)) = (S y)", "(<=2 y (S y)) = true", "(not (<=2 (S y) y)) = true"]}, "thesy < hipster": {"summary": "4/28", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_0) (max ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 Z) (max ts_ph_Nat_0 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) (== ts_ph_Nat_0 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) (<=2 ts_ph_Nat_0 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 (S Z)) (max (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max (S Z) ts_ph_Nat_0) (max ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (S ts_ph_Nat_0) (max ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 (S ts_ph_Nat_0)) (S ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (S ts_ph_Nat_0) (max (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max (S ts_ph_Nat_0) ts_ph_Nat_0) (S ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_1)) (== (S ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (S ts_ph_Nat_1) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 (S ts_ph_Nat_1)) (max (S ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max (S ts_ph_Nat_1) ts_ph_Nat_0) (max ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_1) (max ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_1 ts_ph_Nat_0) (max ts_ph_Nat_0 ts_ph_Nat_1)))"], "proved": ["(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = (== ts_ph_Nat_0 ts_ph_Nat_0)", "(== ts_ph_Nat_0 ts_ph_Nat_0) = (<=2 ts_ph_Nat_0 ts_ph_Nat_0)", "(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "26": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/11", "goals": ["(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))"], "proved": []}}, "27": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/11", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))"], "proved": []}}, "28": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/10", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))"], "proved": []}}, "29": {"hipster < thesy": {"summary": "2/6", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U) (z U)) (=> (elem y z) (= (ins1 y z) (z))))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U)) (= (not (== y (S y))) true))", "(forall ((y U) (z U)) (= (ins1 y (ins1 y z)) (ins1 y z)))", "(forall ((y U)) (= (not (== y (S (S y)))) true))"], "proved": ["(== y y) = true", "(not (== y (S y))) = true"]}, "thesy < hipster": {"summary": "1/8", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true"]}}, "30": {"hipster < thesy": {"summary": "3/8", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (not (<2 y y)) true))", "(forall ((y U) (z U)) (=> (<2 z y) (= (not (<2 y z)) true)))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U)) (= (<2 y (S y)) true))", "(forall ((y U) (z U)) (=> (<2 z y) (= (not (<2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<2 y z) (= (<2 y (S z)) true)))", "(forall ((y U) (z U)) (=> (<2 z y) (= (not (<2 y (S z))) true)))"], "proved": ["(not (<2 y y)) = true", "(== y y) = true", "(<2 y (S y)) = true"]}, "thesy < hipster": {"summary": "2/14", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S Z)) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (<2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (S ts_ph_Nat_0) ts_ph_Nat_0) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (<2 (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "31": {"hipster < thesy": {"summary": "2/4", "goals": ["(forall ((x U) (y U)) (= (min y x) (min x y)))", "(forall ((x U)) (= (min x x) (x)))", "(forall ((x U)) (= (min x (S x)) (x)))", "(forall ((x U) (y U) (z U)) (= (min (min x y) z) (min x (min y z))))"], "proved": ["(min x x) = x", "(min x (S x)) = x"]}, "thesy < hipster": {"summary": "0/6", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 Z) Z))", "(forall ((ts_ph_Nat_0 U)) (= (min (S ts_ph_Nat_0) ts_ph_Nat_0) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 (S ts_ph_Nat_0)) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (min (S Z) ts_ph_Nat_0) (min ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 (S Z)) (min (S Z) ts_ph_Nat_0)))"], "proved": []}}, "32": {"hipster < thesy": {"summary": "2/4", "goals": ["(forall ((x U) (y U)) (= (min y x) (min x y)))", "(forall ((x U)) (= (min x x) (x)))", "(forall ((x U)) (= (min x (S x)) (x)))", "(forall ((x U) (y U) (z U)) (= (min (min x y) z) (min x (min y z))))"], "proved": ["(min x x) = x", "(min x (S x)) = x"]}, "thesy < hipster": {"summary": "0/7", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 Z) Z))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (min (S Z) ts_ph_Nat_0) (min ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 (S Z)) (min (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 (S ts_ph_Nat_0)) (min (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (min (S ts_ph_Nat_0) ts_ph_Nat_0) (min ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 (S ts_ph_Nat_0)) ts_ph_Nat_0))"], "proved": []}}, "33": {"hipster < thesy": {"summary": "9/16", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U) (z U)) (= (min z y) (min y z)))", "(forall ((y U)) (= (min y y) (y)))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (min z y) (z))))", "(forall ((y U)) (= (<=2 y y) true))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 z y) (== y z))))", "(forall ((y U)) (= (min y (S y)) (y)))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (min (S y) z) (z))))", "(forall ((y U)) (= (<=2 y (S y)) true))", "(forall ((y U)) (= (not (<=2 (S y) y)) true))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (not (<=2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 y (S z)) true)))", "(forall ((x2 U) (y U) (z U)) (= (min (min y z) x2) (min y (min z x2))))", "(forall ((y U) (z U)) (= (<=2 y (min y z)) (<=2 y z)))", "(forall ((y U) (z U)) (= (<=2 (min y z) z) true))"], "proved": ["(min z y) = (min y z)", "(min y y) = y", "(<=2 y y) = true", "(== y y) = true", "(min y (S y)) = y", "(<=2 y (S y)) = true", "(not (<=2 (S y) y)) = true", "(<=2 y (min y z)) = (<=2 y z)", "(<=2 (min y z) z) = true"]}, "thesy < hipster": {"summary": "4/32", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 Z) Z))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (min (S Z) ts_ph_Nat_0) (min ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 (S Z)) (min (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (min (S ts_ph_Nat_0) ts_ph_Nat_0) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 (S ts_ph_Nat_0)) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 ts_ph_Nat_0) (== ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_1) (min ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_1 ts_ph_Nat_0) (min ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (min ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_1) true))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 ts_ph_Nat_1 ts_ph_Nat_0) (== ts_ph_Nat_1 (min ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 (min ts_ph_Nat_0 ts_ph_Nat_1)) (<=2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_1) (min ts_ph_Nat_1 (min ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_1 (min ts_ph_Nat_0 ts_ph_Nat_1)) (min ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (min ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_1)) false))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (S ts_ph_Nat_1) (min ts_ph_Nat_0 ts_ph_Nat_1)) false))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (min ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_1)) true))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_1) (min (min ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min (min ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_1)) (min ts_ph_Nat_0 ts_ph_Nat_1)))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true", "(<=2 (min ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_1) = true"]}}, "34": {"hipster < thesy": {"summary": "9/16", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U) (z U)) (= (min z y) (min y z)))", "(forall ((y U)) (= (min y y) (y)))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (min z y) (z))))", "(forall ((y U)) (= (<=2 y y) true))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 z y) (== y z))))", "(forall ((y U)) (= (min y (S y)) (y)))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (min (S y) z) (z))))", "(forall ((y U)) (= (<=2 y (S y)) true))", "(forall ((y U)) (= (not (<=2 (S y) y)) true))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (not (<=2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 y (S z)) true)))", "(forall ((x2 U) (y U) (z U)) (= (min (min y z) x2) (min y (min z x2))))", "(forall ((y U) (z U)) (= (<=2 y (min y z)) (<=2 y z)))", "(forall ((y U) (z U)) (= (<=2 (min y z) z) true))"], "proved": ["(min z y) = (min y z)", "(min y y) = y", "(<=2 y y) = true", "(== y y) = true", "(min y (S y)) = y", "(<=2 y (S y)) = true", "(not (<=2 (S y) y)) = true", "(<=2 y (min y z)) = (<=2 y z)", "(<=2 (min y z) z) = true"]}, "thesy < hipster": {"summary": "5/29", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 Z) Z))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) (<=2 ts_ph_Nat_0 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) (== ts_ph_Nat_0 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 (S ts_ph_Nat_0)) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (min ts_ph_Nat_0 (S Z)) (min (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (min (S Z) ts_ph_Nat_0) (min ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_1 ts_ph_Nat_0) (min ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_1) (min ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 ts_ph_Nat_0) (== ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_1) (min ts_ph_Nat_1 (min ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_1 (min ts_ph_Nat_0 ts_ph_Nat_1)) (min ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (min ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_1) true))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 ts_ph_Nat_1 ts_ph_Nat_0) (== ts_ph_Nat_1 (min ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 (min ts_ph_Nat_0 ts_ph_Nat_1)) (<=2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min ts_ph_Nat_0 ts_ph_Nat_1) (min (S ts_ph_Nat_1) (min ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (min (S ts_ph_Nat_1) (min ts_ph_Nat_0 ts_ph_Nat_1)) (min ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (S ts_ph_Nat_1) (min ts_ph_Nat_0 ts_ph_Nat_1)) false))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = (<=2 ts_ph_Nat_0 ts_ph_Nat_0)", "(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = (== ts_ph_Nat_0 ts_ph_Nat_0)", "(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true", "(<=2 (min ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_1) = true"]}}, "35": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/0", "goals": [], "proved": []}}, "36": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/0", "goals": [], "proved": []}}, "37": {"hipster < thesy": {"summary": "2/7", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U)) (= (not (== y (S y))) true))", "(forall ((x2 U) (y U) (z U)) (= (delete z (delete y x2)) (delete y (delete z x2))))", "(forall ((y U) (z U)) (= (delete y (delete y z)) (delete y z)))", "(forall ((y U) (z U)) (= (not (elem y (delete y z))) true))", "(forall ((y U)) (= (not (== y (S (S y)))) true))"], "proved": ["(== y y) = true", "(not (== y (S y))) = true"]}, "thesy < hipster": {"summary": "1/8", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 ts_ph_Nat_0) (== ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true"]}}, "38": {"hipster < thesy": {"summary": "0/5", "goals": ["(forall ((x2 U) (z U)) (=> (++ x2 z) (= (z) (x2))))", "(forall ((z U)) (= (++ z z) true))", "(forall ((z U)) (= (not (++ z (S z))) true))", "(forall ((x2 U) (x3 U) (x4 U)) (= (== (== x2 x3) x4) (== x2 (== x3 x4))))", "(forall ((z U)) (= (not (++ z (S (S z)))) true))"], "proved": []}, "thesy < hipster": {"summary": "0/10", "goals": ["(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))"], "proved": []}}, "39": {"hipster < thesy": {"summary": "9/10", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U)) (= (+2 y Z) (y)))", "(forall ((y U) (z U)) (= (+2 y (S z)) (S (+2 y z))))", "(forall ((y U)) (= (not (== y (S y))) true))", "(forall ((x2 U) (y U) (z U)) (= (+2 (+2 y z) x2) (+2 y (+2 z x2))))", "(forall ((y U) (z U)) (= (== y (+2 z y)) (== z Z)))", "(forall ((x2 U) (y U) (z U)) (= (== y (+2 x2 y)) (== z (+2 z x2))))", "(forall ((y U)) (= (not (== y (S (S y)))) true))", "(forall ((y U) (z U)) (= (+2 z y) (+2 y z)))"], "proved": ["(== y y) = true", "(+2 y Z) = y", "(+2 y (S z)) = (S (+2 y z))", "(not (== y (S y))) = true", "(+2 (+2 y z) x2) = (+2 y (+2 z x2))", "(== y (+2 z y)) = (== z Z)", "(== y (+2 x2 y)) = (== z (+2 z x2))", "(not (== y (S (S y)))) = true", "(+2 z y) = (+2 y z)"]}, "thesy < hipster": {"summary": "1/32", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (== Z ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (== ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (== (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (S (S ts_ph_Nat_0)) (2 (S ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (2 (S ts_ph_Nat_0) (S Z)) (S (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== Z (2 ts_ph_Nat_0 ts_ph_Nat_0)) (== (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_0) (== Z (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_0)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z)) (S (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_0) (S ts_ph_Nat_0)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== (2 ts_ph_Nat_0 ts_ph_Nat_0) (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (S ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_1)) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (== ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 ts_ph_Nat_0) (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (== ts_ph_Nat_1 ts_ph_Nat_0)))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true"]}}, "40": {"hipster < thesy": {"summary": "1/1", "goals": ["(forall ((y U) (z U)) (= (take y (take y z)) (take y z)))"], "proved": ["(take y (take y z)) = (take y z)"]}, "thesy < hipster": {"summary": "0/5", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_0)) (take ts_ph_Nat_0 ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_0 ts_ph_list_0) (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take (S ts_ph_Nat_0) (take ts_ph_Nat_0 ts_ph_list_0)) (take ts_ph_Nat_0 ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_0 ts_ph_list_0) (take (S ts_ph_Nat_0) (take ts_ph_Nat_0 ts_ph_list_0))))"], "proved": []}}, "41": {"hipster < thesy": {"summary": "1/1", "goals": ["(forall ((y U) (z U)) (= (take y (take y z)) (take y z)))"], "proved": ["(take y (take y z)) = (take y z)"]}, "thesy < hipster": {"summary": "0/7", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_1 U) (ts_ph_fun1_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 (map2 ts_ph_fun1_1 ts_ph_list_0)) (map2 ts_ph_fun1_1 (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_fun1_1 U) (ts_ph_list_0 U)) (= (map2 ts_ph_fun1_1 (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 (map2 ts_ph_fun1_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))"], "proved": []}}, "42": {"hipster < thesy": {"summary": "1/1", "goals": ["(forall ((y U) (z U)) (= (take y (take y z)) (take y z)))"], "proved": ["(take y (take y z)) = (take y z)"]}, "thesy < hipster": {"summary": "0/5", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0))))"], "proved": []}}, "43": {"hipster < thesy": {"summary": "1/1", "goals": ["(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))"], "proved": ["(++ (++ z x2) x3) = (++ z (++ x2 x3))"]}, "thesy < hipster": {"summary": "0/3", "goals": ["(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))"], "proved": []}}, "44": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/3", "goals": ["(forall ((ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 nil2) ()))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_sk_1 U)) (= (zipConcat ts_ph_sk_1 ts_ph_list2_1 ts_ph_list2_0) (zip (cons2 ts_ph_sk_1 ts_ph_list2_1) ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_sk_1 U)) (= (zip (cons2 ts_ph_sk_1 ts_ph_list2_1) ts_ph_list2_0) (zipConcat ts_ph_sk_1 ts_ph_list2_1 ts_ph_list2_0)))"], "proved": []}}, "45": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/1", "goals": ["(forall ((ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 nil2) ()))"], "proved": []}}, "47": {"hipster < thesy": {"summary": "5/7", "goals": ["(forall ((x U) (y U)) (= (max y x) (max x y)))", "(forall ((x U)) (= (max x x) (x)))", "(forall ((y U)) (= (height (mirror y)) (height y)))", "(forall ((y U)) (= (mirror (mirror y)) (y)))", "(forall ((x U)) (= (max x (S x)) (S x)))", "(forall ((x U) (y U)) (= (max x (max x y)) (max x y)))", "(forall ((x U)) (= (max x (S (S x))) (S (S x))))"], "proved": ["(max y x) = (max x y)", "(max x x) = x", "(height (mirror y)) = (height y)", "(mirror (mirror y)) = y", "(max x (S x)) = (S x)"]}, "thesy < hipster": {"summary": "0/14", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 Z) (max ts_ph_Nat_0 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_0) (max ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Tree_0 U)) (= (mirror (mirror ts_ph_Tree_0)) ts_ph_Tree_0))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 (S Z)) (max (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (max (S Z) ts_ph_Nat_0) (max ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (max ts_ph_Nat_0 (S ts_ph_Nat_0)) (S ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (S ts_ph_Nat_0) (max ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max (S ts_ph_Nat_1) ts_ph_Nat_0) (max ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 (S ts_ph_Nat_1)) (max (S ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_0 ts_ph_Nat_1) (max ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (max ts_ph_Nat_1 ts_ph_Nat_0) (max ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Tree_0 U)) (= (height ts_ph_Tree_0) (height (mirror ts_ph_Tree_0))))", "(forall ((ts_ph_Tree_0 U)) (= (height (mirror ts_ph_Tree_0)) (height ts_ph_Tree_0)))"], "proved": []}}, "48": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/5", "goals": ["(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_list_0 U)) (= (last (cons Z ts_ph_list_0)) (last ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (last ts_ph_list_0) (last (cons Z ts_ph_list_0))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))"], "proved": []}}, "49": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/17", "goals": ["(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_list_0 U)) (= (butlastConcat () ts_ph_list_0) (butlast ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (butlast ts_ph_list_0) (butlastConcat () ts_ph_list_0)))", "(forall ((ts_ph_list_0 U) (ts_ph_sk_0 U)) (= (cons ts_ph_sk_0 (butlastConcat ts_ph_list_0 ts_ph_list_0)) (cons ts_ph_sk_0 (++ ts_ph_list_0 (butlast ts_ph_list_0)))))", "(forall ((ts_ph_list_0 U) (ts_ph_sk_0 U)) (= (cons ts_ph_sk_0 (++ ts_ph_list_0 (butlast ts_ph_list_0))) (cons ts_ph_sk_0 (butlastConcat ts_ph_list_0 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_0) (butlast ts_ph_list_0)) (butlastConcat (++ ts_ph_list_0 ts_ph_list_0) ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (butlastConcat (++ ts_ph_list_0 ts_ph_list_0) ts_ph_list_0) (++ (++ ts_ph_list_0 ts_ph_list_0) (butlast ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (butlastConcat ts_ph_list_0 ts_ph_list_0) (++ ts_ph_list_0 (butlast ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 (butlast ts_ph_list_0)) (butlastConcat ts_ph_list_0 ts_ph_list_0)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (++ ts_ph_list_0 (butlastConcat ts_ph_list_1 ts_ph_list_0)) (butlastConcat (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_0)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (butlastConcat (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_0) (++ ts_ph_list_0 (butlastConcat ts_ph_list_1 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U) (ts_ph_sk_1 U)) (= (butlast (cons ts_ph_sk_1 ts_ph_list_0)) (butlastConcat (cons ts_ph_sk_1 ()) ts_ph_list_0)))", "(forall ((ts_ph_list_0 U) (ts_ph_sk_1 U)) (= (butlastConcat (cons ts_ph_sk_1 ()) ts_ph_list_0) (butlast (cons ts_ph_sk_1 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (butlastConcat (butlast ts_ph_list_0) ts_ph_list_0) (++ (butlast ts_ph_list_0) (butlast ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (++ (butlast ts_ph_list_0) (butlast ts_ph_list_0)) (butlastConcat (butlast ts_ph_list_0) ts_ph_list_0)))"], "proved": []}}, "50": {"hipster < thesy": {"summary": "7/11", "goals": ["(forall ((x U)) (= (-2 x x) (Z)))", "(forall ((y U)) (= (take (len y) y) (y)))", "(forall ((x U)) (= (-2 x (S x)) (Z)))", "(forall ((x U)) (= (-2 (S x) x) (S Z)))", "(forall ((y U) (z U)) (= (take y (take y z)) (take y z)))", "(forall ((y U)) (= (take (S (len y)) y) (y)))", "(forall ((y U)) (= (take (len y) (butlast y)) (butlast y)))", "(forall ((y U)) (= (take (len (butlast y)) y) (butlast y)))", "(forall ((x U)) (= (-2 x (S (S x))) (Z)))", "(forall ((x U)) (= (-2 (S (S x)) x) (S (S Z))))", "(forall ((y U) (z U)) (= (-2 (len (butlast y)) z) (-2 (len y) (S z))))"], "proved": ["(-2 x x) = Z", "(take (len y) y) = y", "(-2 x (S x)) = Z", "(-2 (S x) x) = (S Z)", "(take y (take y z)) = (take y z)", "(take (len y) (butlast y)) = (butlast y)", "(-2 x (S (S x))) = Z"]}, "thesy < hipster": {"summary": "0/21", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_list_0 U) (ts_ph_sk_1 U)) (= (butlast (cons ts_ph_sk_1 ts_ph_list_0)) (take (len ts_ph_list_0) (cons ts_ph_sk_1 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U) (ts_ph_sk_1 U)) (= (take (len ts_ph_list_0) (cons ts_ph_sk_1 ts_ph_list_0)) (butlast (cons ts_ph_sk_1 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (take (len ts_ph_list_0) ts_ph_list_0) ts_ph_list_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (take (len ts_ph_list_0) (butlast ts_ph_list_0)) (butlast ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (butlast ts_ph_list_0) (take (len ts_ph_list_0) (butlast ts_ph_list_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) (S Z)) (-2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take (len ts_ph_list_0) (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take (len ts_ph_list_0) (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_1) (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) (-2 ts_ph_Nat_1 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) (-2 ts_ph_Nat_1 ts_ph_Nat_0)) (-2 ts_ph_Nat_0 ts_ph_Nat_1)))"], "proved": []}}, "51": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/3", "goals": ["(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))"], "proved": []}}, "52": {"hipster < thesy": {"summary": "0/6", "goals": ["(forall ((x2 U) (z U)) (=> (++ x2 z) (= (z) (x2))))", "(forall ((z U)) (= (++ z z) true))", "(forall ((z U)) (= (not (++ z (S z))) true))", "(forall ((x2 U) (x3 U) (x4 U)) (= (== (== x2 x3) x4) (== x2 (== x3 x4))))", "(forall ((x2 U) (x3 U)) (= (rev (== (rev x3) x2)) (== (rev x2) x3)))", "(forall ((z U)) (= (not (++ z (S (S z)))) true))"], "proved": []}, "thesy < hipster": {"summary": "0/14", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 ts_ph_Nat_0) (== ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (rev (++ ts_ph_list2_0 ts_ph_list2_1)) (++ (rev ts_ph_list2_1) (rev ts_ph_list2_0))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (++ (rev ts_ph_list2_1) (rev ts_ph_list2_0)) (rev (++ ts_ph_list2_0 ts_ph_list2_1))))", "(forall ((ts_ph_list2_0 U)) (= (rev (rev ts_ph_list2_0)) ts_ph_list2_0))"], "proved": []}}, "53": {"hipster < thesy": {"summary": "4/8", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (<=2 y y) true))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 z y) (== y z))))", "(forall ((y U)) (= (<=2 y (S y)) true))", "(forall ((y U)) (= (not (<=2 (S y) y)) true))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (not (<=2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 y (S z)) true)))"], "proved": ["(<=2 y y) = true", "(== y y) = true", "(<=2 y (S y)) = true", "(not (<=2 (S y) y)) = true"]}, "thesy < hipster": {"summary": "3/13", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))"], "proved": ["(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "54": {"hipster < thesy": {"summary": "9/11", "goals": ["(forall ((x U)) (= (-2 x x) (Z)))", "(forall ((x U)) (= (+2 x Z) (x)))", "(forall ((x U)) (= (-2 x (S x)) (Z)))", "(forall ((x U)) (= (-2 (S x) x) (S Z)))", "(forall ((x U) (y U)) (= (+2 x (S y)) (S (+2 x y))))", "(forall ((x U) (y U)) (= (-2 x (+2 x y)) (Z)))", "(forall ((x U) (y U)) (= (-2 y (+2 x y)) (Z)))", "(forall ((x U) (y U) (z U)) (= (-2 (-2 x y) z) (-2 x (+2 y z))))", "(forall ((x U) (y U)) (= (-2 (+2 y x) y) (-2 x (-2 y y))))", "(forall ((x U) (y U)) (= (-2 (+2 y x) x) (y)))", "(forall ((x U) (y U)) (= (+2 x (-2 y x)) (+2 y (-2 x y))))"], "proved": ["(-2 x x) = Z", "(+2 x Z) = x", "(-2 x (S x)) = Z", "(-2 (S x) x) = (S Z)", "(+2 x (S y)) = (S (+2 x y))", "(-2 x (+2 x y)) = Z", "(-2 y (+2 x y)) = Z", "(-2 (+2 y x) y) = (-2 x (-2 y y))", "(-2 (+2 y x) x) = y"]}, "thesy < hipster": {"summary": "3/18", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) Z))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (-2 (S Z) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_1 ts_ph_Nat_0) (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (-2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) ts_ph_Nat_1))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))"], "proved": ["(-2 ts_ph_Nat_0 ts_ph_Nat_0) = Z", "(-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = Z", "(-2 (S ts_ph_Nat_0) ts_ph_Nat_0) = (S Z)"]}}, "55": {"hipster < thesy": {"summary": "6/7", "goals": ["(forall ((y U)) (= (-2 y y) (Z)))", "(forall ((y U)) (= (-2 y (S y)) (Z)))", "(forall ((y U)) (= (-2 (S y) y) (S Z)))", "(forall ((x2 U) (z U)) (= (-2 (len x2) z) (len (drop z x2))))", "(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))", "(forall ((y U)) (= (-2 y (S (S y))) (Z)))", "(forall ((y U)) (= (-2 (S (S y)) y) (S (S Z))))"], "proved": ["(-2 y y) = Z", "(-2 y (S y)) = Z", "(-2 (S y) y) = (S Z)", "(-2 (len x2) z) = (len (drop z x2))", "(++ (++ z x2) x3) = (++ z (++ x2 x3))", "(-2 y (S (S y))) = Z"]}, "thesy < hipster": {"summary": "0/19", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_list_0 U)) (= (drop (len ts_ph_list_0) ts_ph_list_0) ()))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (drop (len ts_ph_list_0) (++ ts_ph_list_0 ts_ph_list_1)) ts_ph_list_1))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (len (drop ts_ph_Nat_0 ts_ph_list_0)) (-2 (len ts_ph_list_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (-2 (len ts_ph_list_0) ts_ph_Nat_0) (len (drop ts_ph_Nat_0 ts_ph_list_0))))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1)) (drop (S ts_ph_Nat_0) ts_ph_list_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S ts_ph_Nat_0) ts_ph_list_1) (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1)) (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1)) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_1 (S ts_ph_Nat_0)) (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z)) (-2 ts_ph_Nat_1 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) ts_ph_Nat_1) Z))"], "proved": []}}, "56": {"hipster < thesy": {"summary": "5/5", "goals": ["(forall ((x U)) (= (+2 x Z) (x)))", "(forall ((x U) (y U)) (= (+2 x (S y)) (S (+2 x y))))", "(forall ((x2 U) (y U) (z U)) (= (drop (+2 y z) x2) (drop y (drop z x2))))", "(forall ((x U) (y U) (z U)) (= (+2 (+2 x y) z) (+2 x (+2 y z))))", "(forall ((x U) (y U)) (= (+2 y x) (+2 x y)))"], "proved": ["(+2 x Z) = x", "(+2 x (S y)) = (S (+2 x y))", "(drop (+2 y z) x2) = (drop y (drop z x2))", "(+2 (+2 x y) z) = (+2 x (+2 y z))", "(+2 y x) = (+2 x y)"]}, "thesy < hipster": {"summary": "0/14", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_0)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_0) (2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_sk_1 U)) (= (drop (2 ts_ph_Nat_0 ts_ph_Nat_0) (cons ts_ph_sk_1 ())) (drop ts_ph_Nat_0 (cons ts_ph_sk_1 ()))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_sk_1 U)) (= (drop ts_ph_Nat_0 (cons ts_ph_sk_1 ())) (drop (2 ts_ph_Nat_0 ts_ph_Nat_0) (cons ts_ph_sk_1 ()))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1)) (drop (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_list_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_list_1) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2)) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2))))"], "proved": []}}, "57": {"hipster < thesy": {"summary": "5/6", "goals": ["(forall ((x U)) (= (-2 x x) (Z)))", "(forall ((x U)) (= (-2 x (S x)) (Z)))", "(forall ((x U)) (= (-2 (S x) x) (S Z)))", "(forall ((y U) (z U)) (= (take y (take y z)) (take y z)))", "(forall ((x U)) (= (-2 x (S (S x))) (Z)))", "(forall ((x U)) (= (-2 (S (S x)) x) (S (S Z))))"], "proved": ["(-2 x x) = Z", "(-2 x (S x)) = Z", "(-2 (S x) x) = (S Z)", "(take y (take y z)) = (take y z)", "(-2 x (S (S x))) = Z"]}, "thesy < hipster": {"summary": "0/17", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_1)) ()))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_0)) (take ts_ph_Nat_0 ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_0 ts_ph_list_0) (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S ts_ph_Nat_0) ts_ph_list_1) (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list_1)) (drop (S ts_ph_Nat_0) ts_ph_list_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1)) (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list_1)) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_1 (S ts_ph_Nat_0)) (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z)) (-2 ts_ph_Nat_1 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take (S ts_ph_Nat_0) (take ts_ph_Nat_0 ts_ph_list_0)) (take ts_ph_Nat_0 ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_0 ts_ph_list_0) (take (S ts_ph_Nat_0) (take ts_ph_Nat_0 ts_ph_list_0))))"], "proved": []}}, "58": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/6", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 nil2) nil2))", "(forall ((ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 nil2) ()))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (drop (S ts_ph_Nat_1) ts_ph_list2_0) (drop (S Z) (drop ts_ph_Nat_1 ts_ph_list2_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (drop (S Z) (drop ts_ph_Nat_1 ts_ph_list2_0)) (drop (S ts_ph_Nat_1) ts_ph_list2_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list2_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list2_1)) (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list2_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list2_1 U)) (= (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list2_1)) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list2_1))))"], "proved": []}}, "59": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/5", "goals": ["(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_list_0 U)) (= (last (cons Z ts_ph_list_0)) (last ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (last ts_ph_list_0) (last (cons Z ts_ph_list_0))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))"], "proved": []}}, "60": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/5", "goals": ["(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_list_0 U)) (= (last (cons Z ts_ph_list_0)) (last ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (last ts_ph_list_0) (last (cons Z ts_ph_list_0))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))"], "proved": []}}, "61": {"hipster < thesy": {"summary": "1/2", "goals": ["(forall ((y U) (z U)) (= (lastOfTwo y (++ y z)) (lastOfTwo y z)))", "(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))"], "proved": ["(++ (++ z x2) x3) = (++ z (++ x2 x3))"]}, "thesy < hipster": {"summary": "0/15", "goals": ["(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_list_0 U)) (= (lastOfTwo ts_ph_list_0 ts_ph_list_0) (lastOfTwo () ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (lastOfTwo () ts_ph_list_0) (lastOfTwo ts_ph_list_0 ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (lastOfTwo ts_ph_list_0 ts_ph_list_0) (last ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (last ts_ph_list_0) (lastOfTwo ts_ph_list_0 ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (last ts_ph_list_0) (last (cons Z ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (last (cons Z ts_ph_list_0)) (last ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (last (cons ts_ph_Nat_1 ts_ph_list_0)) (lastOfTwo (cons ts_ph_Nat_1 ts_ph_list_0) ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (lastOfTwo (cons ts_ph_Nat_1 ts_ph_list_0) ts_ph_list_0) (last (cons ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (lastOfTwo (cons ts_ph_Nat_0 ()) ts_ph_list_0) (lastOfTwo (cons ts_ph_Nat_0 ts_ph_list_0) ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (lastOfTwo (cons ts_ph_Nat_0 ts_ph_list_0) ts_ph_list_0) (lastOfTwo (cons ts_ph_Nat_0 ()) ts_ph_list_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (lastOfTwo (cons Z ts_ph_list_1) ts_ph_list_0) (lastOfTwo ts_ph_list_1 ts_ph_list_0)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (lastOfTwo ts_ph_list_1 ts_ph_list_0) (lastOfTwo (cons Z ts_ph_list_1) ts_ph_list_0)))"], "proved": []}}, "62": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/2", "goals": ["(forall ((ts_ph_list_0 U)) (= (last ts_ph_list_0) (last (cons Z ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (last (cons Z ts_ph_list_0)) (last ts_ph_list_0)))"], "proved": []}}, "63": {"hipster < thesy": {"summary": "2/6", "goals": ["(forall ((x U)) (= (not (<2 x x)) true))", "(forall ((x U) (y U)) (=> (<2 y x) (= (not (<2 x y)) true)))", "(forall ((x U)) (= (<2 x (S x)) true))", "(forall ((x U) (y U)) (=> (<2 y x) (= (not (<2 (S x) y)) true)))", "(forall ((x U) (y U)) (=> (<2 x y) (= (<2 x (S y)) true)))", "(forall ((x U) (y U)) (=> (<2 y x) (= (not (<2 x (S y))) true)))"], "proved": ["(not (<2 x x)) = true", "(<2 x (S x)) = true"]}, "thesy < hipster": {"summary": "1/11", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 nil2) nil2))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_list2_0 U)) (= (drop (len ts_ph_list2_0) ts_ph_list2_0) nil2))", "(forall ((ts_ph_list_0 U)) (= (last (cons Z ts_ph_list_0)) (last ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (last ts_ph_list_0) (last (cons Z ts_ph_list_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_1 U)) (= (drop (S ts_ph_Nat_0) ts_ph_list2_1) (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list2_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_1 U)) (= (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list2_1)) (drop (S ts_ph_Nat_0) ts_ph_list2_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list2_1 U)) (= (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list2_1)) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list2_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list2_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list2_1)) (drop ts_ph_Nat_0 (drop ts_ph_Nat_1 ts_ph_list2_1))))"], "proved": ["(<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "64": {"hipster < thesy": {"summary": "0/0", "goals": [], "proved": []}, "thesy < hipster": {"summary": "0/5", "goals": ["(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_list_0 U)) (= (last ts_ph_list_0) (last (cons Z ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (last (cons Z ts_ph_list_0)) (last ts_ph_list_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))"], "proved": []}}, "65": {"hipster < thesy": {"summary": "8/12", "goals": ["(forall ((x U)) (= (not (<2 x x)) true))", "(forall ((x U) (y U)) (=> (<2 y x) (= (not (<2 x y)) true)))", "(forall ((x U)) (= (+2 x Z) (x)))", "(forall ((x U)) (= (<2 x (S x)) true))", "(forall ((x U) (y U)) (=> (<2 y x) (= (not (<2 (S x) y)) true)))", "(forall ((x U) (y U)) (=> (<2 x y) (= (<2 x (S y)) true)))", "(forall ((x U) (y U)) (=> (<2 y x) (= (not (<2 x (S y))) true)))", "(forall ((x U) (y U)) (= (+2 x (S y)) (S (+2 x y))))", "(forall ((x U) (y U)) (= (<2 x (+2 y x)) (<2 Z y)))", "(forall ((x U) (y U) (z U)) (= (<2 x (+2 x z)) (<2 y (+2 y z))))", "(forall ((x U) (y U)) (= (not (<2 (+2 y x) y)) true))", "(forall ((x U) (y U)) (= (+2 y x) (+2 x y)))"], "proved": ["(not (<2 x x)) = true", "(+2 x Z) = x", "(<2 x (S x)) = true", "(+2 x (S y)) = (S (+2 x y))", "(<2 x (+2 y x)) = (<2 Z y)", "(<2 x (+2 x z)) = (<2 y (+2 y z))", "(not (<2 (+2 y x) y)) = true", "(+2 y x) = (+2 x y)"]}, "thesy < hipster": {"summary": "1/23", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (<2 (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (<2 Z ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U)) (= (<2 Z ts_ph_Nat_0) (<2 Z (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 Z (2 ts_ph_Nat_0 ts_ph_Nat_0)) (<2 Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<2 Z ts_ph_Nat_0) (<2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (<2 Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z)) (<2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S Z)) (<2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S ts_ph_Nat_0)) (<2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S Z)) (<2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 ts_ph_Nat_0 ts_ph_Nat_1) (<2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (<2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_1)) (<2 ts_ph_Nat_0 (S Z))))"], "proved": ["(<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "66": {"hipster < thesy": {"summary": "3/5", "goals": ["(forall ((x U)) (= (<=2 x x) true))", "(forall ((x U)) (= (<=2 x (S x)) true))", "(forall ((x U)) (= (not (<=2 (S x) x)) true))", "(forall ((x U) (y U)) (=> (<=2 y x) (= (not (<=2 (S x) y)) true)))", "(forall ((x U) (y U)) (=> (<=2 x y) (= (<=2 x (S y)) true)))"], "proved": ["(<=2 x x) = true", "(<=2 x (S x)) = true", "(not (<=2 (S x) x)) = true"]}, "thesy < hipster": {"summary": "2/3", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))"], "proved": ["(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "67": {"hipster < thesy": {"summary": "4/6", "goals": ["(forall ((x U)) (= (-2 x x) (Z)))", "(forall ((x U)) (= (-2 x (S x)) (Z)))", "(forall ((x U)) (= (-2 (S x) x) (S Z)))", "(forall ((x U)) (= (-2 x (S (S x))) (Z)))", "(forall ((x U)) (= (-2 (S (S x)) x) (S (S Z))))", "(forall ((y U) (z U)) (= (-2 (len (butlast y)) z) (-2 (len y) (S z))))"], "proved": ["(-2 x x) = Z", "(-2 x (S x)) = Z", "(-2 (S x) x) = (S Z)", "(-2 x (S (S x))) = Z"]}, "thesy < hipster": {"summary": "3/7", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_1 (S ts_ph_Nat_0)) (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) (S Z)) (-2 ts_ph_Nat_1 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_1 ts_ph_Nat_0) ts_ph_Nat_1) Z))"], "proved": ["(-2 ts_ph_Nat_0 ts_ph_Nat_0) = Z", "(-2 (S ts_ph_Nat_0) ts_ph_Nat_0) = (S Z)", "(-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = Z"]}}, "68": {"hipster < thesy": {"summary": "4/10", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (<=2 y y) true))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 z y) (== y z))))", "(forall ((y U)) (= (<=2 y (S y)) true))", "(forall ((y U)) (= (not (<=2 (S y) y)) true))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (not (<=2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<=2 y z) (= (<=2 y (S z)) true)))", "(forall ((x2 U) (y U) (z U)) (= (delete z (delete y x2)) (delete y (delete z x2))))", "(forall ((y U) (z U)) (= (delete y (delete y z)) (delete y z)))"], "proved": ["(<=2 y y) = true", "(== y y) = true", "(<=2 y (S y)) = true", "(not (<=2 (S y) y)) = true"]}, "thesy < hipster": {"summary": "3/18", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_0 U)) (= (== (len ts_ph_list2_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (len ts_ph_list2_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_0 U)) (= (== ts_ph_Nat_0 (len ts_ph_list2_0)) (== (len ts_ph_list2_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 ts_ph_Nat_0) (== ts_ph_Nat_0 ts_ph_Nat_1)))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "69": {"hipster < thesy": {"summary": "10/12", "goals": ["(forall ((x U)) (= (<=2 x x) true))", "(forall ((x U)) (= (+2 x Z) (x)))", "(forall ((x U)) (= (<=2 x (S x)) true))", "(forall ((x U)) (= (not (<=2 (S x) x)) true))", "(forall ((x U) (y U)) (=> (<=2 y x) (= (not (<=2 (S x) y)) true)))", "(forall ((x U) (y U)) (=> (<=2 x y) (= (<=2 x (S y)) true)))", "(forall ((x U) (y U)) (= (+2 x (S y)) (S (+2 x y))))", "(forall ((x U) (y U)) (= (<=2 x (+2 x y)) true))", "(forall ((x U) (y U)) (= (<=2 y (+2 x y)) true))", "(forall ((x U) (y U)) (= (<=2 (+2 x y) y) (<=2 (+2 y x) y)))", "(forall ((x U) (y U) (z U)) (= (<=2 (+2 y x) x) (<=2 (+2 z y) z)))", "(forall ((x U) (y U)) (= (+2 y x) (+2 x y)))"], "proved": ["(<=2 x x) = true", "(+2 x Z) = x", "(<=2 x (S x)) = true", "(not (<=2 (S x) x)) = true", "(+2 x (S y)) = (S (+2 x y))", "(<=2 x (+2 x y)) = true", "(<=2 y (+2 x y)) = true", "(<=2 (+2 x y) y) = (<=2 (+2 y x) y)", "(<=2 (+2 y x) x) = (<=2 (+2 z y) z)", "(+2 y x) = (+2 x y)"]}, "thesy < hipster": {"summary": "2/22", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) true))", "(forall ((ts_ph_Nat_0 U)) (= (S (S ts_ph_Nat_0)) (S (2 ts_ph_Nat_0 (S Z)))))", "(forall ((ts_ph_Nat_0 U)) (= (S (2 ts_ph_Nat_0 (S Z))) (S (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_0) Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_0) Z) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (<=2 (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S Z) ts_ph_Nat_0) (<=2 (S Z) (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_0)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z)) (S (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_1 (2 ts_ph_Nat_0 ts_ph_Nat_2)) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (<=2 ts_ph_Nat_1 Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_1)) (<=2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 (S ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (<=2 (S Z) ts_ph_Nat_0)))"], "proved": ["(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "70": {"hipster < thesy": {"summary": "3/5", "goals": ["(forall ((x U)) (= (<=2 x x) true))", "(forall ((x U)) (= (<=2 x (S x)) true))", "(forall ((x U)) (= (not (<=2 (S x) x)) true))", "(forall ((x U) (y U)) (=> (<=2 y x) (= (not (<=2 (S x) y)) true)))", "(forall ((x U) (y U)) (=> (<=2 x y) (= (<=2 x (S y)) true)))"], "proved": ["(<=2 x x) = true", "(<=2 x (S x)) = true", "(not (<=2 (S x) x)) = true"]}, "thesy < hipster": {"summary": "2/3", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))"], "proved": ["(<=2 ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "71": {"hipster < thesy": {"summary": "3/8", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (not (<2 y y)) true))", "(forall ((y U) (z U)) (=> (<2 z y) (= (not (<2 y z)) true)))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U)) (= (<2 y (S y)) true))", "(forall ((y U) (z U)) (=> (<2 z y) (= (not (<2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<2 y z) (= (<2 y (S z)) true)))", "(forall ((y U) (z U)) (=> (<2 z y) (= (not (<2 y (S z))) true)))"], "proved": ["(not (<2 y y)) = true", "(== y y) = true", "(<2 y (S y)) = true"]}, "thesy < hipster": {"summary": "2/13", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (<2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S Z)) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}, "72": {"hipster < thesy": {"summary": "8/12", "goals": ["(forall ((y U)) (= (-2 y y) (Z)))", "(forall ((z U)) (= (take (len z) z) (z)))", "(forall ((y U)) (= (-2 y (S y)) (Z)))", "(forall ((y U)) (= (-2 (S y) y) (S Z)))", "(forall ((x2 U) (z U)) (= (-2 (len x2) z) (len (drop z x2))))", "(forall ((x2 U) (x3 U) (z U)) (= (take x2 (take z x3)) (take z (take x2 x3))))", "(forall ((x2 U) (z U)) (= (take z (take z x2)) (take z x2)))", "(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))", "(forall ((x2 U) (z U)) (= (rev (++ (rev x2) z)) (++ (rev z) x2)))", "(forall ((z U)) (= (take (S (len z)) z) (z)))", "(forall ((y U)) (= (-2 y (S (S y))) (Z)))", "(forall ((y U)) (= (-2 (S (S y)) y) (S (S Z))))"], "proved": ["(-2 y y) = Z", "(take (len z) z) = z", "(-2 y (S y)) = Z", "(-2 (S y) y) = (S Z)", "(-2 (len x2) z) = (len (drop z x2))", "(take z (take z x2)) = (take z x2)", "(++ (++ z x2) x3) = (++ z (++ x2 x3))", "(rev (++ (rev x2) z)) = (++ (rev z) x2)"]}, "thesy < hipster": {"summary": "0/23", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_list_0 U)) (= (take (len ts_ph_list_0) ts_ph_list_0) ts_ph_list_0))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (take (len ts_ph_list_0) (++ ts_ph_list_0 ts_ph_list_1)) ts_ph_list_0))", "(forall ((ts_ph_list_0 U)) (= (take (S Z) ts_ph_list_0) (take (S Z) (++ ts_ph_list_0 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (take (S Z) (++ ts_ph_list_0 ts_ph_list_0)) (take (S Z) ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (len (drop ts_ph_Nat_0 ts_ph_list_0)) (-2 (len ts_ph_list_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (-2 (len ts_ph_list_0) ts_ph_Nat_0) (len (drop ts_ph_Nat_0 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (drop (len ts_ph_list_0) ts_ph_list_0) ()))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (rev (++ ts_ph_list_0 ts_ph_list_1)) (++ (rev ts_ph_list_1) (rev ts_ph_list_0))))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (++ (rev ts_ph_list_1) (rev ts_ph_list_0)) (rev (++ ts_ph_list_0 ts_ph_list_1))))", "(forall ((ts_ph_list_0 U)) (= (rev (rev ts_ph_list_0)) ts_ph_list_0))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_1)) ()))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_1)) (take ts_ph_Nat_0 ts_ph_list_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (take ts_ph_Nat_0 ts_ph_list_1) (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_1 U)) (= (drop (S ts_ph_Nat_0) (take ts_ph_Nat_0 ts_ph_list_1)) ()))"], "proved": []}}, "73": {"hipster < thesy": {"summary": "2/2", "goals": ["(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))", "(forall ((x2 U) (z U)) (= (rev (++ (rev x2) z)) (++ (rev z) x2)))"], "proved": ["(++ (++ z x2) x3) = (++ z (++ x2 x3))", "(rev (++ (rev x2) z)) = (++ (rev z) x2)"]}, "thesy < hipster": {"summary": "0/6", "goals": ["(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (++ (rev ts_ph_list_1) (rev ts_ph_list_0)) (rev (++ ts_ph_list_0 ts_ph_list_1))))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (rev (++ ts_ph_list_0 ts_ph_list_1)) (++ (rev ts_ph_list_1) (rev ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (rev (rev ts_ph_list_0)) ts_ph_list_0))"], "proved": []}}, "74": {"hipster < thesy": {"summary": "2/11", "goals": ["(forall ((y U)) (= (++ y y) (Z)))", "(forall ((z U)) (= (take (len z) z) (z)))", "(forall ((y U)) (= (++ y (S y)) (Z)))", "(forall ((y U)) (= (++ (S y) y) (S Z)))", "(forall ((x2 U) (z U)) (= (++ (len x2) z) (len (drop z x2))))", "(forall ((x2 U) (z U)) (= (take z (take z x2)) (take z x2)))", "(forall ((x2 U) (x3 U) (z U)) (= (-2 (-2 z x2) x3) (-2 z (-2 x2 x3))))", "(forall ((x2 U) (z U)) (= (rev (-2 (rev x2) z)) (-2 (rev z) x2)))", "(forall ((z U)) (= (take (S (len z)) z) (z)))", "(forall ((y U)) (= (++ y (S (S y))) (Z)))", "(forall ((y U)) (= (++ (S (S y)) y) (S (S Z))))"], "proved": ["(take (len z) z) = z", "(take z (take z x2)) = (take z x2)"]}, "thesy < hipster": {"summary": "0/22", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_list_0 U)) (= (take (len ts_ph_list_0) ts_ph_list_0) ts_ph_list_0))", "(forall ((ts_ph_list_0 U)) (= (drop (len ts_ph_list_0) ts_ph_list_0) ()))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (take (len ts_ph_list_0) (++ ts_ph_list_0 ts_ph_list_1)) ts_ph_list_0))", "(forall ((ts_ph_list_0 U)) (= (take (S Z) (++ ts_ph_list_0 ts_ph_list_0)) (take (S Z) ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (take (S Z) ts_ph_list_0) (take (S Z) (++ ts_ph_list_0 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (-2 (len ts_ph_list_0) ts_ph_Nat_1) (len (drop ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (len (drop ts_ph_Nat_1 ts_ph_list_0)) (-2 (len ts_ph_list_0) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (drop ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0)) ()))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (drop (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0)) ()))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0))))"], "proved": []}}, "75": {"hipster < thesy": {"summary": "8/10", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U)) (= (+2 y Z) (y)))", "(forall ((y U) (z U)) (= (+2 y (S z)) (S (+2 y z))))", "(forall ((y U)) (= (not (== y (S y))) true))", "(forall ((x2 U) (y U) (z U)) (= (+2 (+2 y z) x2) (+2 y (+2 z x2))))", "(forall ((y U) (z U)) (= (== y (+2 z y)) (== z Z)))", "(forall ((x2 U) (y U) (z U)) (= (== y (+2 x2 y)) (== z (+2 z x2))))", "(forall ((y U)) (= (not (== y (S (S y)))) true))", "(forall ((y U) (z U)) (= (+2 z y) (+2 y z)))"], "proved": ["(== y y) = true", "(+2 y Z) = y", "(+2 y (S z)) = (S (+2 y z))", "(not (== y (S y))) = true", "(+2 (+2 y z) x2) = (+2 y (+2 z x2))", "(== y (+2 z y)) = (== z Z)", "(== y (+2 x2 y)) = (== z (+2 z x2))", "(+2 z y) = (+2 y z)"]}, "thesy < hipster": {"summary": "1/31", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_0) ts_ph_Nat_1) (2 ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (== Z ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) (== ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 (2 ts_ph_Nat_0 ts_ph_Nat_1)) (== (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z (2 ts_ph_Nat_0 ts_ph_Nat_0)) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== Z (2 ts_ph_Nat_0 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (S ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (S ts_ph_Nat_0)) (== ts_ph_Nat_1 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_0) (S Z)) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)) (== ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== (2 ts_ph_Nat_0 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0)) (== ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 ts_ph_Nat_0) (== (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_0 ts_ph_Nat_0))))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true"]}}, "76": {"hipster < thesy": {"summary": "3/5", "goals": ["(forall ((x2 U) (z U)) (=> (== x2 z) (= (z) (x2))))", "(forall ((z U)) (= (== z z) true))", "(forall ((z U)) (= (not (== z (S z))) true))", "(forall ((x2 U) (x3 U) (x4 U)) (= (++ (++ x2 x3) x4) (++ x2 (++ x3 x4))))", "(forall ((z U)) (= (not (== z (S (S z)))) true))"], "proved": ["(== z z) = true", "(not (== z (S z))) = true", "(++ (++ x2 x3) x4) = (++ x2 (++ x3 x4))"]}, "thesy < hipster": {"summary": "1/11", "goals": ["(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (== (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true"]}}, "77": {"hipster < thesy": {"summary": "0/5", "goals": ["(forall ((x2 U) (y U) (z U)) (=> (<=2 x2 y) (= (&& z z) (x2))))", "(forall ((x2 U) (y U) (z U)) (=> (<=2 x2 y) (= (&& z (S z)) (x2))))", "(forall ((y U)) (= (not (&& (S y) y)) true))", "(forall ((y U) (z U)) (=> (&& z y) (= (not (&& (S y) z)) true)))", "(forall ((y U)) (= (not (&& (S (S y)) y)) true))"], "proved": []}, "thesy < hipster": {"summary": "0/17", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_list_0 U)) (= (sorted (cons Z ts_ph_list_0)) (sorted ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (sorted ts_ph_list_0) (sorted (cons Z ts_ph_list_0))))", "(forall ((ts_ph_Nat_0 U)) (= (&& (<=2 ts_ph_Nat_0 Z) false) false))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (&& (<=2 ts_ph_Nat_0 Z) true)))", "(forall ((ts_ph_Nat_0 U)) (= (&& (<=2 ts_ph_Nat_0 Z) true) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) (&& (<=2 ts_ph_Nat_0 Z) false)))", "(forall ((ts_ph_Nat_0 U)) (= (&& (<=2 ts_ph_Nat_0 Z) false) (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_0 ts_ph_Nat_1)) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_1 Z)) (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_1 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_1 ts_ph_Nat_0)) (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_1 Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (&& (<=2 ts_ph_Nat_0 ts_ph_Nat_1) false) false))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_1) (&& (<=2 ts_ph_Nat_0 ts_ph_Nat_1) true)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (&& (<=2 ts_ph_Nat_0 ts_ph_Nat_1) true) (<=2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_1) (&& (<=2 ts_ph_Nat_0 ts_ph_Nat_1) (<=2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (&& (<=2 ts_ph_Nat_0 ts_ph_Nat_1) (<=2 ts_ph_Nat_0 ts_ph_Nat_1)) (<=2 ts_ph_Nat_0 ts_ph_Nat_1)))"], "proved": []}}, "78": {"hipster < thesy": {"summary": "1/6", "goals": ["(forall ((y U)) (=> (sorted y) (= (sort y) (y))))", "(forall ((x2 U) (y U) (z U)) (=> (&& x2 y) (= (<=2 z z) (x2))))", "(forall ((x2 U) (y U) (z U)) (=> (&& x2 y) (= (<=2 z (S z)) (x2))))", "(forall ((y U)) (= (not (<=2 (S y) y)) true))", "(forall ((y U) (z U)) (=> (<=2 z y) (= (not (<=2 (S y) z)) true)))", "(forall ((y U)) (= (not (<=2 (S (S y)) y)) true))"], "proved": ["(not (<=2 (S y) y)) = true"]}, "thesy < hipster": {"summary": "0/12", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))", "(forall ((ts_ph_Nat_0 U)) (= (&& (<=2 ts_ph_Nat_0 Z) false) false))", "(forall ((ts_ph_Nat_0 U)) (= (&& (<=2 ts_ph_Nat_0 Z) true) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 ts_ph_Nat_0 Z) (&& (<=2 ts_ph_Nat_0 Z) true)))", "(forall ((ts_ph_Nat_0 U)) (= (&& (<=2 ts_ph_Nat_0 Z) false) (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<=2 (S ts_ph_Nat_0) ts_ph_Nat_0) (&& (<=2 ts_ph_Nat_0 Z) false)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_1 Z)) (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_1 ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_1 ts_ph_Nat_0)) (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_1 Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (&& (<=2 ts_ph_Nat_0 Z) (<=2 ts_ph_Nat_0 ts_ph_Nat_1)) (<=2 ts_ph_Nat_0 Z)))", "(forall ((ts_ph_list_0 U)) (= (sorted ts_ph_list_0) (sorted (cons Z ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (sorted (cons Z ts_ph_list_0)) (sorted ts_ph_list_0)))"], "proved": []}}, "79": {"hipster < thesy": {"summary": "3/5", "goals": ["(forall ((x U)) (= (-2 x x) (Z)))", "(forall ((x U)) (= (-2 x (S x)) (Z)))", "(forall ((x U)) (= (-2 (S x) x) (S Z)))", "(forall ((x U)) (= (-2 x (S (S x))) (Z)))", "(forall ((x U)) (= (-2 (S (S x)) x) (S (S Z))))"], "proved": ["(-2 x x) = Z", "(-2 x (S x)) = Z", "(-2 (S x) x) = (S Z)"]}, "thesy < hipster": {"summary": "3/4", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))"], "proved": ["(-2 ts_ph_Nat_0 ts_ph_Nat_0) = Z", "(-2 (S ts_ph_Nat_0) ts_ph_Nat_0) = (S Z)", "(-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = Z"]}}, "80": {"hipster < thesy": {"summary": "2/9", "goals": ["(forall ((y U)) (= (++ y y) (Z)))", "(forall ((z U)) (= (take (len z) z) (z)))", "(forall ((y U)) (= (++ y (S y)) (Z)))", "(forall ((y U)) (= (++ (S y) y) (S Z)))", "(forall ((x2 U) (z U)) (= (take z (take z x2)) (take z x2)))", "(forall ((x2 U) (x3 U) (z U)) (= (-2 (-2 z x2) x3) (-2 z (-2 x2 x3))))", "(forall ((z U)) (= (take (S (len z)) z) (z)))", "(forall ((y U)) (= (++ y (S (S y))) (Z)))", "(forall ((y U)) (= (++ (S (S y)) y) (S (S Z))))"], "proved": ["(take (len z) z) = z", "(take z (take z x2)) = (take z x2)"]}, "thesy < hipster": {"summary": "0/19", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_list_0 U)) (= (++ ts_ph_list_0 ()) ts_ph_list_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 ts_ph_Nat_0) Z))", "(forall ((ts_ph_Nat_0 U)) (= (-2 (S ts_ph_Nat_0) ts_ph_Nat_0) (S Z)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U)) (= (take (len ts_ph_list_0) (++ ts_ph_list_0 ts_ph_list_1)) (take (len ts_ph_list_0) (++ ts_ph_list_0 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (take (S Z) ts_ph_list_0) (take (S Z) (++ ts_ph_list_0 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U)) (= (take (S Z) (++ ts_ph_list_0 ts_ph_list_0)) (take (S Z) ts_ph_list_0)))", "(forall ((ts_ph_list_0 U)) (= (take (len ts_ph_list_0) ts_ph_list_0) ts_ph_list_0))", "(forall ((ts_ph_Nat_0 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_0)) Z))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2)) (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2)))", "(forall ((ts_ph_list_0 U) (ts_ph_list_1 U) (ts_ph_list_2 U)) (= (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_2) (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_2))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_1 ts_ph_list_0) (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list_0 U)) (= (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list_0)) (take ts_ph_Nat_1 ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) (S Z)) (-2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) (S Z))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (-2 (-2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_0) Z))"], "proved": []}}, "81": {"hipster < thesy": {"summary": "6/6", "goals": ["(forall ((x U)) (= (+2 x Z) (x)))", "(forall ((x U) (y U)) (= (+2 x (S y)) (S (+2 x y))))", "(forall ((x2 U) (y U) (z U)) (= (drop (+2 y z) x2) (drop y (drop z x2))))", "(forall ((y U) (z U)) (= (take y (take y z)) (take y z)))", "(forall ((x U) (y U) (z U)) (= (+2 (+2 x y) z) (+2 x (+2 y z))))", "(forall ((x U) (y U)) (= (+2 y x) (+2 x y)))"], "proved": ["(+2 x Z) = x", "(+2 x (S y)) = (S (+2 x y))", "(drop (+2 y z) x2) = (drop y (drop z x2))", "(take y (take y z)) = (take y z)", "(+2 (+2 x y) z) = (+2 x (+2 y z))", "(+2 y x) = (+2 x y)"]}, "thesy < hipster": {"summary": "0/21", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (2 ts_ph_Nat_0 Z) ts_ph_Nat_0))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 ()) ()))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (S (2 ts_ph_Nat_0 ts_ph_Nat_1)) (2 ts_ph_Nat_0 (S ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 (S ts_ph_Nat_1)) (S (2 ts_ph_Nat_0 ts_ph_Nat_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2)) (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_Nat_2 U)) (= (2 (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_2) (2 ts_ph_Nat_0 (2 ts_ph_Nat_1 ts_ph_Nat_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_sk_1 U)) (= (drop ts_ph_Nat_0 (cons ts_ph_sk_1 ())) (drop (2 ts_ph_Nat_0 ts_ph_Nat_0) (cons ts_ph_sk_1 ()))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_sk_1 U)) (= (drop (2 ts_ph_Nat_0 ts_ph_Nat_0) (cons ts_ph_sk_1 ())) (drop ts_ph_Nat_0 (cons ts_ph_sk_1 ()))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_sk_1 U)) (= (take ts_ph_Nat_0 (cons ts_ph_sk_1 ())) (take (2 ts_ph_Nat_0 ts_ph_Nat_0) (cons ts_ph_sk_1 ()))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_sk_1 U)) (= (take (2 ts_ph_Nat_0 ts_ph_Nat_0) (cons ts_ph_sk_1 ())) (take ts_ph_Nat_0 (cons ts_ph_sk_1 ()))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1)) (drop (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_list_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U) (ts_ph_list_1 U)) (= (drop (2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_list_1) (drop ts_ph_Nat_1 (drop ts_ph_Nat_0 ts_ph_list_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_0 ts_ph_Nat_1) (2 ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (2 ts_ph_Nat_1 ts_ph_Nat_0) (2 ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (drop ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_0)) ()))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_0)) (take ts_ph_Nat_0 ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_0 ts_ph_list_0) (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (drop (S ts_ph_Nat_0) (take ts_ph_Nat_0 ts_ph_list_0)) ()))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take (S ts_ph_Nat_0) (take ts_ph_Nat_0 ts_ph_list_0)) (take ts_ph_Nat_0 ts_ph_list_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list_0 U)) (= (take ts_ph_Nat_0 ts_ph_list_0) (take (S ts_ph_Nat_0) (take ts_ph_Nat_0 ts_ph_list_0))))"], "proved": []}}, "82": {"hipster < thesy": {"summary": "1/1", "goals": ["(forall ((y U) (z U)) (= (take y (take y z)) (take y z)))"], "proved": ["(take y (take y z)) = (take y z)"]}, "thesy < hipster": {"summary": "0/10", "goals": ["(forall ((ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 nil2) ()))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 nil2) nil2))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (take ts_ph_Nat_1 ts_ph_list2_0) (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list2_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list2_0)) (take ts_ph_Nat_1 ts_ph_list2_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 (take ts_ph_Nat_1 ts_ph_list2_0)) (zip (take ts_ph_Nat_1 ts_ph_list2_0) ts_ph_list2_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (zip (take ts_ph_Nat_1 ts_ph_list2_0) ts_ph_list2_0) (zip ts_ph_list2_0 (take ts_ph_Nat_1 ts_ph_list2_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (take ts_ph_Nat_1 ts_ph_list2_0) (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list2_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list2_0)) (take ts_ph_Nat_1 ts_ph_list2_0)))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (zip (take ts_ph_Nat_1 ts_ph_list2_0) (take ts_ph_Nat_1 ts_ph_list2_0)) (zip ts_ph_list2_0 (take ts_ph_Nat_1 ts_ph_list2_0))))", "(forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 (take ts_ph_Nat_1 ts_ph_list2_0)) (zip (take ts_ph_Nat_1 ts_ph_list2_0) (take ts_ph_Nat_1 ts_ph_list2_0))))"], "proved": []}}, "83": {"hipster < thesy": {"summary": "3/4", "goals": ["(forall ((z U)) (= (take (len z) z) (z)))", "(forall ((x2 U) (z U)) (= (take z (take z x2)) (take z x2)))", "(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))", "(forall ((z U)) (= (take (S (len z)) z) (z)))"], "proved": ["(take (len z) z) = z", "(take z (take z x2)) = (take z x2)", "(++ (++ z x2) x3) = (++ z (++ x2 x3))"]}, "thesy < hipster": {"summary": "0/26", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 nil2) nil2))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 nil2) nil2))", "(forall ((ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 nil2) ()))", "(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_list2_0 U)) (= (drop (len ts_ph_list2_0) ts_ph_list2_0) nil2))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (zip ts_ph_list2_0 (++ ts_ph_list2_0 ts_ph_list2_1)) (zip ts_ph_list2_0 ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (zip (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_0) (zip ts_ph_list2_0 ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U)) (= (take (S Z) ts_ph_list2_0) (take (S Z) (++ ts_ph_list2_0 ts_ph_list2_0))))", "(forall ((ts_ph_list2_0 U)) (= (take (S Z) (++ ts_ph_list2_0 ts_ph_list2_0)) (take (S Z) ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip (++ ts_ph_list2_0 ts_ph_list2_0) (cons2 ts_ph_sk_1 nil2)) (zip ts_ph_list2_0 (cons2 ts_ph_sk_1 nil2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip ts_ph_list2_0 (cons2 ts_ph_sk_1 nil2)) (zip (++ ts_ph_list2_0 ts_ph_list2_0) (cons2 ts_ph_sk_1 nil2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip (cons2 ts_ph_sk_1 nil2) (++ ts_ph_list2_0 ts_ph_list2_0)) (zip (cons2 ts_ph_sk_1 nil2) ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip (cons2 ts_ph_sk_1 nil2) ts_ph_list2_0) (zip (cons2 ts_ph_sk_1 nil2) (++ ts_ph_list2_0 ts_ph_list2_0))))", "(forall ((ts_ph_list2_0 U)) (= (take (len ts_ph_list2_0) ts_ph_list2_0) ts_ph_list2_0))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_0 U)) (= (drop ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list2_0)) nil2))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 (take ts_ph_Nat_0 ts_ph_list2_0)) (zip (take ts_ph_Nat_0 ts_ph_list2_0) ts_ph_list2_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_0 U)) (= (zip (take ts_ph_Nat_0 ts_ph_list2_0) ts_ph_list2_0) (zip ts_ph_list2_0 (take ts_ph_Nat_0 ts_ph_list2_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_0 U)) (= (take ts_ph_Nat_0 ts_ph_list2_0) (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list2_0))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_0 U)) (= (take ts_ph_Nat_0 (take ts_ph_Nat_0 ts_ph_list2_0)) (take ts_ph_Nat_0 ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (drop (len ts_ph_list2_0) (++ ts_ph_list2_0 ts_ph_list2_1)) ts_ph_list2_1))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (take (len ts_ph_list2_0) (++ ts_ph_list2_0 ts_ph_list2_1)) ts_ph_list2_0))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_1 U)) (= (drop (S ts_ph_Nat_0) ts_ph_list2_1) (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list2_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_1 U)) (= (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list2_1)) (drop (S ts_ph_Nat_0) ts_ph_list2_1)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_0 U)) (= (drop (len ts_ph_list2_0) (take ts_ph_Nat_0 ts_ph_list2_0)) nil2))"], "proved": []}}, "84": {"hipster < thesy": {"summary": "2/4", "goals": ["(forall ((z U)) (= (take (len z) z) (z)))", "(forall ((x2 U) (z U)) (= (take z (take z x2)) (take z x2)))", "(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))", "(forall ((z U)) (= (take (S (len z)) z) (z)))"], "proved": ["(take (len z) z) = z", "(++ (++ z x2) x3) = (++ z (++ x2 x3))"]}, "thesy < hipster": {"summary": "0/21", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (drop ts_ph_Nat_0 nil2) nil2))", "(forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 nil2) nil2))", "(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 nil2) ()))", "(forall ((ts_ph_list2_0 U)) (= (drop (len ts_ph_list2_0) ts_ph_list2_0) nil2))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (zip ts_ph_list2_0 (++ ts_ph_list2_0 ts_ph_list2_1)) (zip ts_ph_list2_0 ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (zip (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_0) (zip ts_ph_list2_0 (++ ts_ph_list2_0 ts_ph_list2_1))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (zip ts_ph_list2_0 (++ ts_ph_list2_0 ts_ph_list2_1)) (zip (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U)) (= (take (S Z) ts_ph_list2_0) (take (S Z) (++ ts_ph_list2_0 ts_ph_list2_0))))", "(forall ((ts_ph_list2_0 U)) (= (take (S Z) (++ ts_ph_list2_0 ts_ph_list2_0)) (take (S Z) ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (take (len ts_ph_list2_0) (++ ts_ph_list2_0 ts_ph_list2_1)) (take (len ts_ph_list2_0) (++ ts_ph_list2_0 ts_ph_list2_0))))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip (cons2 ts_ph_sk_1 nil2) ts_ph_list2_0) (zip (cons2 ts_ph_sk_1 nil2) (++ ts_ph_list2_0 ts_ph_list2_0))))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip (cons2 ts_ph_sk_1 nil2) (++ ts_ph_list2_0 ts_ph_list2_0)) (zip (cons2 ts_ph_sk_1 nil2) ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip ts_ph_list2_0 (cons2 ts_ph_sk_1 nil2)) (zip (++ ts_ph_list2_0 ts_ph_list2_0) (cons2 ts_ph_sk_1 nil2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip (++ ts_ph_list2_0 ts_ph_list2_0) (cons2 ts_ph_sk_1 nil2)) (zip ts_ph_list2_0 (cons2 ts_ph_sk_1 nil2))))", "(forall ((ts_ph_list2_0 U)) (= (take (len ts_ph_list2_0) ts_ph_list2_0) ts_ph_list2_0))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_1 U)) (= (drop (S ts_ph_Nat_0) ts_ph_list2_1) (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list2_1))))", "(forall ((ts_ph_Nat_0 U) (ts_ph_list2_1 U)) (= (drop (S Z) (drop ts_ph_Nat_0 ts_ph_list2_1)) (drop (S ts_ph_Nat_0) ts_ph_list2_1)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (drop (len ts_ph_list2_0) (++ ts_ph_list2_0 ts_ph_list2_1)) ts_ph_list2_1))"], "proved": []}}, "85": {"hipster < thesy": {"summary": "3/3", "goals": ["(forall ((x2 U) (x3 U) (z U)) (= (++ (++ z x2) x3) (++ z (++ x2 x3))))", "(forall ((x2 U) (z U)) (= (rev (++ (rev x2) z)) (++ (rev z) x2)))", "(forall ((z U)) (= (rev (rev z)) (z)))"], "proved": ["(++ (++ z x2) x3) = (++ z (++ x2 x3))", "(rev (++ (rev x2) z)) = (++ (rev z) x2)", "(rev (rev z)) = z"]}, "thesy < hipster": {"summary": "0/15", "goals": ["(forall ((ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 nil2) ()))", "(forall ((ts_ph_list2_0 U)) (= (++ ts_ph_list2_0 nil2) ts_ph_list2_0))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2)) (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U) (ts_ph_list2_2 U)) (= (++ (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_2) (++ ts_ph_list2_0 (++ ts_ph_list2_1 ts_ph_list2_2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (zip (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_0) (zip ts_ph_list2_0 (++ ts_ph_list2_0 ts_ph_list2_1))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (zip ts_ph_list2_0 (++ ts_ph_list2_0 ts_ph_list2_1)) (zip (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (zip (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_0) (zip (++ ts_ph_list2_0 ts_ph_list2_0) ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip ts_ph_list2_0 (cons2 ts_ph_sk_1 nil2)) (zip (++ ts_ph_list2_0 ts_ph_list2_0) (cons2 ts_ph_sk_1 nil2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip (++ ts_ph_list2_0 ts_ph_list2_0) (cons2 ts_ph_sk_1 nil2)) (zip ts_ph_list2_0 (cons2 ts_ph_sk_1 nil2))))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip (cons2 ts_ph_sk_1 nil2) (++ ts_ph_list2_0 ts_ph_list2_0)) (zip (cons2 ts_ph_sk_1 nil2) ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_sk_1 U)) (= (zip (cons2 ts_ph_sk_1 nil2) ts_ph_list2_0) (zip (cons2 ts_ph_sk_1 nil2) (++ ts_ph_list2_0 ts_ph_list2_0))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (zip (++ ts_ph_list2_0 ts_ph_list2_1) ts_ph_list2_0) (zip ts_ph_list2_0 ts_ph_list2_0)))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (rev (++ ts_ph_list2_0 ts_ph_list2_1)) (++ (rev ts_ph_list2_1) (rev ts_ph_list2_0))))", "(forall ((ts_ph_list2_0 U) (ts_ph_list2_1 U)) (= (++ (rev ts_ph_list2_1) (rev ts_ph_list2_0)) (rev (++ ts_ph_list2_0 ts_ph_list2_1))))", "(forall ((ts_ph_list2_0 U)) (= (rev (rev ts_ph_list2_0)) ts_ph_list2_0))"], "proved": []}}, "86": {"hipster < thesy": {"summary": "3/8", "goals": ["(forall ((y U) (z U)) (=> (== z y) (= (y) (z))))", "(forall ((y U)) (= (not (<2 y y)) true))", "(forall ((y U) (z U)) (=> (<2 z y) (= (not (<2 y z)) true)))", "(forall ((y U)) (= (== y y) true))", "(forall ((y U)) (= (<2 y (S y)) true))", "(forall ((y U) (z U)) (=> (<2 z y) (= (not (<2 (S y) z)) true)))", "(forall ((y U) (z U)) (=> (<2 y z) (= (<2 y (S z)) true)))", "(forall ((y U) (z U)) (=> (<2 z y) (= (not (<2 y (S z))) true)))"], "proved": ["(not (<2 y y)) = true", "(== y y) = true", "(<2 y (S y)) = true"]}, "thesy < hipster": {"summary": "2/15", "goals": ["(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 Z) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (== ts_ph_Nat_0 Z)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_0) true))", "(forall ((ts_ph_Nat_0 U)) (= (== Z ts_ph_Nat_0) (<2 ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S Z)) (== Z ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) false))", "(forall ((ts_ph_Nat_0 U)) (= (== (S ts_ph_Nat_0) ts_ph_Nat_0) false))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S ts_ph_Nat_0)) (<2 (S ts_ph_Nat_0) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U)) (= (<2 (S ts_ph_Nat_0) ts_ph_Nat_0) (== ts_ph_Nat_0 (S ts_ph_Nat_0))))", "(forall ((ts_ph_Nat_0 U)) (= (== (S Z) ts_ph_Nat_0) (== ts_ph_Nat_0 (S Z))))", "(forall ((ts_ph_Nat_0 U)) (= (== ts_ph_Nat_0 (S Z)) (== (S Z) ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_0 ts_ph_Nat_1) (== ts_ph_Nat_1 ts_ph_Nat_0)))", "(forall ((ts_ph_Nat_0 U) (ts_ph_Nat_1 U)) (= (== ts_ph_Nat_1 ts_ph_Nat_0) (== ts_ph_Nat_0 ts_ph_Nat_1)))", "(forall ((ts_ph_Nat_0 U)) (= (<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) true))"], "proved": ["(== ts_ph_Nat_0 ts_ph_Nat_0) = true", "(<2 ts_ph_Nat_0 (S ts_ph_Nat_0)) = true"]}}}