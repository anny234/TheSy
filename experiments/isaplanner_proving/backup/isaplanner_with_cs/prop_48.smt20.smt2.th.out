Collecting statistics
(last nil) => Z
Z => (last nil)
(last (cons ?y nil)) => ?y
(last (cons ?y (cons ?x2 ?x3))) => (last (cons ?x2 ?x3))
(butlast nil) => nil
nil => (butlast nil)
(butlast (cons ?y nil)) => nil
(butlast (cons ?y (cons ?x2 ?x3))) => (cons ?y (butlast (cons ?x2 ?x3)))
(cons ?y (butlast (cons ?x2 ?x3))) => (butlast (cons ?y (cons ?x2 ?x3)))
(++ nil ?y0) => ?y0
(++ (cons ?z ?xs) ?y1) => (cons ?z (++ ?xs ?y1))
(cons ?z (++ ?xs ?y1)) => (++ (cons ?z ?xs) ?y1)
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: list Nat dict: last butlast ++ Z S nil cons
Starting depth 1
14:19:01 [0m[33m[WARN] [0mproved: (++ ?ts_ph_list_0 nil) => ?ts_ph_list_0
Starting depth 2
14:19:01 [0m[33m[WARN] [0mproved: (last ?ts_ph_list_0) => (last (cons Z ?ts_ph_list_0))
14:19:01 [0m[33m[WARN] [0mproved: (last (cons Z ?ts_ph_list_0)) => (last ?ts_ph_list_0)
generalizing (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_1)) = (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_1)
generalized as case_split
14:19:01 [0m[33m[WARN] [0mproved: (++ ?ts_ph_list_0 (++ ?ts_ph_list_1 ?ts_ph_list_2)) => (++ (++ ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2)
14:19:01 [0m[33m[WARN] [0mproved: (++ (++ ?ts_ph_list_0 ?ts_ph_list_1) ?ts_ph_list_2) => (++ ?ts_ph_list_0 (++ ?ts_ph_list_1 ?ts_ph_list_2))
generalizing (++ (++ ts_ph_list_0 ts_ph_list_1) ts_ph_list_1) = (++ ts_ph_list_0 (++ ts_ph_list_1 ts_ph_list_1))
generalized as case_split
done in 659
