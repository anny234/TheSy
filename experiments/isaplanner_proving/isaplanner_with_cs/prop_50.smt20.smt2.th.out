Collecting statistics
(-2 Z ?y) => Z
(-2 (S ?z) Z) => (S ?z)
(S ?z) => (-2 (S ?z) Z)
(-2 (S ?z) (S ?x2)) => (-2 ?z ?x2)
(-2 ?z ?x2) => (-2 (S ?z) (S ?x2))
(take Z ?y0) => nil
(take (S ?z) nil) => nil
(take (S ?z) (cons ?x21 ?x3)) => (cons ?x21 (take ?z ?x3))
(cons ?x21 (take ?z ?x3)) => (take (S ?z) (cons ?x21 ?x3))
(len nil) => Z
Z => (len nil)
(len (cons ?y2 ?xs)) => (S (len ?xs))
(butlast nil) => nil
nil => (butlast nil)
(butlast (cons ?y3 nil)) => nil
(butlast (cons ?y4 (cons ?x25 ?x3))) => (cons ?y4 (butlast (cons ?x25 ?x3)))
(cons ?y4 (butlast (cons ?x25 ?x3))) => (butlast (cons ?y4 (cons ?x25 ?x3)))
(take ?autovar7 nil) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(take ?autovar7 (cons ?autovar3 ?autovar4)) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(take (S ?autovar5) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
(take (S ?autovar6) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
(-2 ?autovar6 Z) => (potential_split ?autovar6 Z (S (param_Nat_0 ?autovar6))) if Cond(var: ?autovar6, pat: Z) Cond(var: ?autovar6, pat: (S ?param_0))
(-2 ?autovar6 (S ?autovar3)) => (potential_split ?autovar6 Z (S (param_Nat_0 ?autovar6))) if Cond(var: ?autovar6, pat: Z) Cond(var: ?autovar6, pat: (S ?param_0))
(-2 (S ?autovar4) ?autovar7) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(-2 (S ?autovar5) ?autovar7) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
 ex is: nil
 ex is: (cons autovar_sk_0 nil)
 ex is: (cons autovar_sk_1 (cons autovar_sk_0 nil))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
 ex is: nil
 ex is: (cons autovar_sk_0 nil)
 ex is: (cons autovar_sk_1 (cons autovar_sk_0 nil))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
Running TheSy on datatypes: Nat list dict: take len butlast -2 nil cons Z S
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 2
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 3
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
Starting depth 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 4
16:19:52 [0m[33m[WARN] [0m# of splitters: 3
16:19:53 [0m[33m[WARN] [0m# of splitters: 4
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 3
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:54 [0m[33m[WARN] [0mproved: (-2 ?ts_ph_Nat_0 Z) => ?ts_ph_Nat_0
16:19:54 [0m[33m[WARN] [0m# of splitters: 1
16:19:54 [0m[33m[WARN] [0m# of splitters: 1
16:19:54 [0m[33m[WARN] [0mproved: (take ?ts_ph_Nat_0 nil) => nil
16:19:54 [0m[33m[WARN] [0m# of splitters: 1
16:19:54 [0m[33m[WARN] [0m# of splitters: 1
16:19:54 [0m[33m[WARN] [0mproved: (-2 ?ts_ph_Nat_0 ?ts_ph_Nat_0) => Z
16:19:54 [0m[33m[WARN] [0m# of splitters: 1
16:19:54 [0m[33m[WARN] [0m# of splitters: 1
Starting depth 2
16:19:54 [0m[33m[WARN] [0m# of splitters: 26
16:19:54 [0m[33m[WARN] [0m# of splitters: 18
16:19:58 [0m[33m[WARN] [0m# of splitters: 25
16:20:04 [0m[33m[WARN] [0m# of splitters: 19
16:20:08 [0m[33m[WARN] [0m# of splitters: 25
16:20:13 [0m[33m[WARN] [0m# of splitters: 18
16:20:16 [0m[33m[WARN] [0m# of splitters: 23
16:20:18 [0m[33m[WARN] [0m# of splitters: 17
16:20:19 [0m[33m[WARN] [0m# of splitters: 22
16:20:20 [0m[33m[WARN] [0m# of splitters: 21
16:20:24 [0m[33m[WARN] [0m# of splitters: 22
16:20:29 [0m[33m[WARN] [0m# of splitters: 19
16:20:34 [0m[33m[WARN] [0m# of splitters: 20
16:20:34 [0m[33m[WARN] [0m# of splitters: 19
16:20:34 [0m[33m[WARN] [0m# of splitters: 20
16:20:36 [0m[33m[WARN] [0m# of splitters: 18
16:20:38 [0m[33m[WARN] [0m# of splitters: 19
16:20:39 [0m[33m[WARN] [0m# of splitters: 17
16:20:42 [0m[33m[WARN] [0m# of splitters: 18
16:20:44 [0m[33m[WARN] [0m# of splitters: 16
16:20:47 [0m[33m[WARN] [0m# of splitters: 16
16:20:49 [0m[33m[WARN] [0m# of splitters: 15
16:20:52 [0m[33m[WARN] [0m# of splitters: 16
16:20:53 [0m[33m[WARN] [0m# of splitters: 14
16:20:56 [0m[33m[WARN] [0m# of splitters: 15
16:20:56 [0m[33m[WARN] [0m# of splitters: 13
16:20:59 [0m[33m[WARN] [0m# of splitters: 13
16:21:00 [0m[33m[WARN] [0m# of splitters: 12
16:21:00 [0m[33m[WARN] [0m# of splitters: 12
16:21:01 [0m[33m[WARN] [0m# of splitters: 11
16:21:03 [0m[33m[WARN] [0m# of splitters: 11
16:21:03 [0m[33m[WARN] [0m# of splitters: 10
16:21:05 [0m[33m[WARN] [0m# of splitters: 10
16:21:06 [0m[33m[WARN] [0m# of splitters: 9
16:21:08 [0m[33m[WARN] [0m# of splitters: 9
16:21:09 [0m[33m[WARN] [0m# of splitters: 8
16:21:11 [0m[33m[WARN] [0m# of splitters: 8
16:21:11 [0m[33m[WARN] [0m# of splitters: 7
16:21:12 [0m[33m[WARN] [0m# of splitters: 7
16:21:13 [0m[33m[WARN] [0m# of splitters: 6
16:21:15 [0m[33m[WARN] [0m# of splitters: 6
16:21:16 [0m[33m[WARN] [0m# of splitters: 1
16:21:16 [0m[33m[WARN] [0m# of splitters: 1
16:21:16 [0m[33m[WARN] [0mproved: (-2 (S ?ts_ph_Nat_0) ?ts_ph_Nat_0) => (S Z)
16:21:16 [0m[33m[WARN] [0m# of splitters: 1
16:21:16 [0m[33m[WARN] [0m# of splitters: 1
16:21:16 [0m[33m[WARN] [0m# of splitters: 1
16:21:16 [0m[33m[WARN] [0m# of splitters: 1
16:21:16 [0m[33m[WARN] [0m# of splitters: 1
16:21:16 [0m[33m[WARN] [0mproved: (butlast (cons ?ts_ph_sk_1 ?ts_ph_list_0)) => (take (len ?ts_ph_list_0) (cons ?ts_ph_sk_1 ?ts_ph_list_0))
16:21:16 [0m[33m[WARN] [0mproved: (take (len ?ts_ph_list_0) (cons ?ts_ph_sk_1 ?ts_ph_list_0)) => (butlast (cons ?ts_ph_sk_1 ?ts_ph_list_0))
16:21:16 [0m[33m[WARN] [0m# of splitters: 1
16:21:16 [0m[33m[WARN] [0m# of splitters: 1
proved: (butlast ?ts_ph_list_0) => (take (-2 (len ?ts_ph_list_0) (S Z)) ?ts_ph_list_0)
proved: (take (-2 (len ?ts_ph_list_0) (S Z)) ?ts_ph_list_0) => (butlast ?ts_ph_list_0)
16:21:16 [0m[33m[WARN] [0mFound all lemmas
done in 83358
