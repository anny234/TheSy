Collecting statistics
(zip nil2 ?y) => nil
(zip (cons2 ?z ?x2) nil2) => nil
(zip (cons2 ?z ?x2) (cons2 ?x3 ?x4)) => (cons (pair2 ?z ?x3) (zip ?x2 ?x4))
(cons (pair2 ?z ?x3) (zip ?x2 ?x4)) => (zip (cons2 ?z ?x2) (cons2 ?x3 ?x4))
(drop Z ?y0) => ?y0
(drop2 Z ?y) => ?y
(drop (S ?z1) nil) => nil
(drop2 (S ?z2) nil2) => nil2
(drop (S ?z3) (cons ?x24 ?x35)) => (drop ?z3 ?x35)
(drop2 (S ?z6) (cons2 ?x27 ?x38)) => (drop2 ?z6 ?x38)
(zip ?autovar11 nil2) => (potential_split ?autovar11 nil2 (cons2 (param_list2_0 ?autovar11) (param_list2_1 ?autovar11))) if Cond(var: ?autovar11, pat: nil2) Cond(var: ?autovar11, pat: (cons2 ?param_0 ?param_1))
(zip ?autovar11 (cons2 ?autovar5 ?autovar6)) => (potential_split ?autovar11 nil2 (cons2 (param_list2_0 ?autovar11) (param_list2_1 ?autovar11))) if Cond(var: ?autovar11, pat: nil2) Cond(var: ?autovar11, pat: (cons2 ?param_0 ?param_1))
(zip (cons2 ?autovar7 ?autovar8) ?autovar12) => (potential_split ?autovar12 nil2 (cons2 (param_list2_0 ?autovar12) (param_list2_1 ?autovar12))) if Cond(var: ?autovar12, pat: nil2) Cond(var: ?autovar12, pat: (cons2 ?param_0 ?param_1))
(zip (cons2 ?autovar9 ?autovar10) ?autovar12) => (potential_split ?autovar12 nil2 (cons2 (param_list2_0 ?autovar12) (param_list2_1 ?autovar12))) if Cond(var: ?autovar12, pat: nil2) Cond(var: ?autovar12, pat: (cons2 ?param_0 ?param_1))
(drop ?autovar7 nil) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(drop ?autovar7 (cons ?autovar3 ?autovar4)) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(drop (S ?autovar5) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
(drop (S ?autovar6) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
(drop2 ?autovar7 nil2) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(drop2 ?autovar7 (cons2 ?autovar3 ?autovar4)) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(drop2 (S ?autovar5) ?autovar8) => (potential_split ?autovar8 nil2 (cons2 (param_list2_0 ?autovar8) (param_list2_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil2) Cond(var: ?autovar8, pat: (cons2 ?param_0 ?param_1))
(drop2 (S ?autovar6) ?autovar8) => (potential_split ?autovar8 nil2 (cons2 (param_list2_0 ?autovar8) (param_list2_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil2) Cond(var: ?autovar8, pat: (cons2 ?param_0 ?param_1))
 ex is: (pair2 autovar_sk_0 autovar_sk_1)
 ex is: nil2
 ex is: (cons2 autovar_sk_0 nil2)
 ex is: (cons2 autovar_sk_1 (cons2 autovar_sk_0 nil2))
 ex is: nil
 ex is: (cons autovar_pair_0 nil)
 ex is: (cons autovar_pair_1 (cons autovar_pair_0 nil))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
 ex is: (pair2 autovar_sk_0 autovar_sk_1)
 ex is: nil2
 ex is: (cons2 autovar_sk_0 nil2)
 ex is: (cons2 autovar_sk_1 (cons2 autovar_sk_0 nil2))
 ex is: nil
 ex is: (cons autovar_pair_0 nil)
 ex is: (cons autovar_pair_1 (cons autovar_pair_0 nil))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
Running TheSy on datatypes: pair list2 Nat list dict: zip drop drop2 pair2 nil2 cons2 nil cons Z S
16:19:52 [0m[33m[WARN] [0m# of splitters: 3
16:19:52 [0m[33m[WARN] [0m# of splitters: 2
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 2
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 2
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 2
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 2
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
proved: (drop ?ts_ph_Nat_1 (zip ?ts_ph_list2_1 ?ts_ph_list2_0)) => (zip (drop2 ?ts_ph_Nat_1 ?ts_ph_list2_1) (drop2 ?ts_ph_Nat_1 ?ts_ph_list2_0))
proved: (zip (drop2 ?ts_ph_Nat_1 ?ts_ph_list2_1) (drop2 ?ts_ph_Nat_1 ?ts_ph_list2_0)) => (drop ?ts_ph_Nat_1 (zip ?ts_ph_list2_1 ?ts_ph_list2_0))
16:19:52 [0m[33m[WARN] [0mFound all lemmas
done in 16
