Collecting statistics
(+2 Z ?y) => ?y
(+2 (S ?z) ?y) => (S (+2 ?z ?y))
(S (+2 ?z ?y)) => (+2 (S ?z) ?y)
(take Z ?y0) => nil
(take (S ?z) nil) => nil
(take (S ?z) (cons ?x2 ?x3)) => (cons ?x2 (take ?z ?x3))
(cons ?x2 (take ?z ?x3)) => (take (S ?z) (cons ?x2 ?x3))
(drop Z ?y1) => ?y1
(drop (S ?z) nil) => nil
(drop (S ?z) (cons ?x2 ?x3)) => (drop ?z ?x3)
(take ?autovar7 nil) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(take ?autovar7 (cons ?autovar3 ?autovar4)) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(take (S ?autovar5) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
(take (S ?autovar6) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
(drop ?autovar7 nil) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(drop ?autovar7 (cons ?autovar3 ?autovar4)) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(drop (S ?autovar5) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
(drop (S ?autovar6) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
 ex is: nil
 ex is: (cons autovar_sk_0 nil)
 ex is: (cons autovar_sk_1 (cons autovar_sk_0 nil))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
 ex is: nil
 ex is: (cons autovar_sk_0 nil)
 ex is: (cons autovar_sk_1 (cons autovar_sk_0 nil))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
Running TheSy on datatypes: list Nat dict: take drop +2 nil cons Z S
16:19:52 [0m[33m[WARN] [0m# of splitters: 2
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 2
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 1
Starting depth 1
16:19:52 [0m[33m[WARN] [0m# of splitters: 4
16:19:52 [0m[33m[WARN] [0m# of splitters: 3
16:19:52 [0m[33m[WARN] [0m# of splitters: 4
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 3
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0mproved: (+2 ?ts_ph_Nat_0 Z) => ?ts_ph_Nat_0
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 3
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0mproved: (drop ?ts_ph_Nat_0 nil) => nil
16:19:53 [0m[33m[WARN] [0m# of splitters: 3
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 3
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0mproved: (take ?ts_ph_Nat_0 nil) => nil
16:19:53 [0m[33m[WARN] [0m# of splitters: 3
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
16:19:53 [0m[33m[WARN] [0m# of splitters: 1
Starting depth 2
16:19:53 [0m[33m[WARN] [0m# of splitters: 34
16:19:53 [0m[33m[WARN] [0m# of splitters: 25
16:19:57 [0m[33m[WARN] [0m# of splitters: 39
16:20:00 [0m[33m[WARN] [0m# of splitters: 24
16:20:03 [0m[33m[WARN] [0m# of splitters: 36
16:20:06 [0m[33m[WARN] [0m# of splitters: 23
16:20:07 [0m[33m[WARN] [0m# of splitters: 32
16:20:10 [0m[33m[WARN] [0m# of splitters: 22
16:20:11 [0m[33m[WARN] [0m# of splitters: 31
16:20:13 [0m[33m[WARN] [0m# of splitters: 27
16:20:16 [0m[33m[WARN] [0m# of splitters: 30
16:20:17 [0m[33m[WARN] [0m# of splitters: 28
16:20:18 [0m[33m[WARN] [0m# of splitters: 29
16:20:22 [0m[33m[WARN] [0m# of splitters: 27
16:20:27 [0m[33m[WARN] [0m# of splitters: 28
16:20:29 [0m[33m[WARN] [0m# of splitters: 24
16:20:31 [0m[33m[WARN] [0m# of splitters: 27
16:20:33 [0m[33m[WARN] [0m# of splitters: 25
16:20:34 [0m[33m[WARN] [0m# of splitters: 25
16:20:35 [0m[33m[WARN] [0m# of splitters: 24
16:20:36 [0m[33m[WARN] [0m# of splitters: 24
16:20:37 [0m[33m[WARN] [0m# of splitters: 23
16:20:37 [0m[33m[WARN] [0m# of splitters: 23
16:20:39 [0m[33m[WARN] [0m# of splitters: 22
16:20:41 [0m[33m[WARN] [0m# of splitters: 22
16:20:43 [0m[33m[WARN] [0m# of splitters: 20
16:20:44 [0m[33m[WARN] [0m# of splitters: 22
16:20:44 [0m[33m[WARN] [0m# of splitters: 20
16:20:45 [0m[33m[WARN] [0m# of splitters: 20
16:20:47 [0m[33m[WARN] [0m# of splitters: 18
16:20:47 [0m[33m[WARN] [0m# of splitters: 19
16:20:48 [0m[33m[WARN] [0m# of splitters: 18
16:20:49 [0m[33m[WARN] [0m# of splitters: 19
16:20:50 [0m[33m[WARN] [0m# of splitters: 17
16:20:50 [0m[33m[WARN] [0m# of splitters: 18
16:20:51 [0m[33m[WARN] [0m# of splitters: 16
16:20:52 [0m[33m[WARN] [0m# of splitters: 16
16:20:52 [0m[33m[WARN] [0m# of splitters: 14
16:20:53 [0m[33m[WARN] [0m# of splitters: 15
16:20:54 [0m[33m[WARN] [0m# of splitters: 14
16:20:54 [0m[33m[WARN] [0m# of splitters: 15
16:20:54 [0m[33m[WARN] [0m# of splitters: 13
16:20:56 [0m[33m[WARN] [0m# of splitters: 14
16:20:57 [0m[33m[WARN] [0m# of splitters: 12
16:20:58 [0m[33m[WARN] [0m# of splitters: 13
generalizing (+2 (+2 ts_ph_Nat_0 ts_ph_Nat_1) ts_ph_Nat_1) = (+2 ts_ph_Nat_0 (+2 ts_ph_Nat_1 ts_ph_Nat_1))
generalized as case_split
16:20:58 [0m[33m[WARN] [0mproved: (+2 (+2 ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Nat_2) => (+2 ?ts_ph_Nat_0 (+2 ?ts_ph_Nat_1 ?ts_ph_Nat_2))
16:20:58 [0m[33m[WARN] [0mproved: (+2 ?ts_ph_Nat_0 (+2 ?ts_ph_Nat_1 ?ts_ph_Nat_2)) => (+2 (+2 ?ts_ph_Nat_0 ?ts_ph_Nat_1) ?ts_ph_Nat_2)
16:20:58 [0m[33m[WARN] [0m# of splitters: 3
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0mproved: (take ?ts_ph_Nat_0 (cons ?ts_ph_sk_1 nil)) => (take (+2 ?ts_ph_Nat_0 ?ts_ph_Nat_0) (cons ?ts_ph_sk_1 nil))
16:20:58 [0m[33m[WARN] [0mproved: (take (+2 ?ts_ph_Nat_0 ?ts_ph_Nat_0) (cons ?ts_ph_sk_1 nil)) => (take ?ts_ph_Nat_0 (cons ?ts_ph_sk_1 nil))
16:20:58 [0m[33m[WARN] [0m# of splitters: 3
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0mproved: (drop (+2 ?ts_ph_Nat_0 ?ts_ph_Nat_0) (cons ?ts_ph_sk_1 nil)) => (drop ?ts_ph_Nat_0 (cons ?ts_ph_sk_1 nil))
16:20:58 [0m[33m[WARN] [0mproved: (drop ?ts_ph_Nat_0 (cons ?ts_ph_sk_1 nil)) => (drop (+2 ?ts_ph_Nat_0 ?ts_ph_Nat_0) (cons ?ts_ph_sk_1 nil))
16:20:58 [0m[33m[WARN] [0m# of splitters: 3
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0mproved: (+2 ?ts_ph_Nat_0 (S ?ts_ph_Nat_1)) => (S (+2 ?ts_ph_Nat_0 ?ts_ph_Nat_1))
16:20:58 [0m[33m[WARN] [0mproved: (S (+2 ?ts_ph_Nat_0 ?ts_ph_Nat_1)) => (+2 ?ts_ph_Nat_0 (S ?ts_ph_Nat_1))
16:20:58 [0m[33m[WARN] [0m# of splitters: 3
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 2
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
16:20:58 [0m[33m[WARN] [0m# of splitters: 1
proved: (take ?ts_ph_Nat_1 (drop ?ts_ph_Nat_2 ?ts_ph_list_0)) => (drop ?ts_ph_Nat_2 (take (+2 ?ts_ph_Nat_1 ?ts_ph_Nat_2) ?ts_ph_list_0))
proved: (drop ?ts_ph_Nat_2 (take (+2 ?ts_ph_Nat_1 ?ts_ph_Nat_2) ?ts_ph_list_0)) => (take ?ts_ph_Nat_1 (drop ?ts_ph_Nat_2 ?ts_ph_list_0))
16:20:58 [0m[33m[WARN] [0mFound all lemmas
done in 65887
