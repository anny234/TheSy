Collecting statistics
(-2 Z ?y) => Z
(-2 (S ?z) Z) => (S ?z)
(S ?z) => (-2 (S ?z) Z)
(-2 (S ?z) (S ?x2)) => (-2 ?z ?x2)
(-2 ?z ?x2) => (-2 (S ?z) (S ?x2))
(take Z ?y0) => nil
(take (S ?z) nil) => nil
(take (S ?z) (cons ?x21 ?x3)) => (cons ?x21 (take ?z ?x3))
(cons ?x21 (take ?z ?x3)) => (take (S ?z) (cons ?x21 ?x3))
(len nil) => Z
Z => (len nil)
(len (cons ?y2 ?xs)) => (S (len ?xs))
(butlast nil) => nil
nil => (butlast nil)
(butlast (cons ?y3 nil)) => nil
(butlast (cons ?y4 (cons ?x25 ?x3))) => (cons ?y4 (butlast (cons ?x25 ?x3)))
(cons ?y4 (butlast (cons ?x25 ?x3))) => (butlast (cons ?y4 (cons ?x25 ?x3)))
(take ?autovar7 nil) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(take ?autovar7 (cons ?autovar3 ?autovar4)) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(take (S ?autovar5) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
(take (S ?autovar6) ?autovar8) => (potential_split ?autovar8 nil (cons (param_list_0 ?autovar8) (param_list_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil) Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1))
(-2 ?autovar6 Z) => (potential_split ?autovar6 Z (S (param_Nat_0 ?autovar6))) if Cond(var: ?autovar6, pat: Z) Cond(var: ?autovar6, pat: (S ?param_0))
(-2 ?autovar6 (S ?autovar3)) => (potential_split ?autovar6 Z (S (param_Nat_0 ?autovar6))) if Cond(var: ?autovar6, pat: Z) Cond(var: ?autovar6, pat: (S ?param_0))
(-2 (S ?autovar4) ?autovar7) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(-2 (S ?autovar5) ?autovar7) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
 ex is: nil
 ex is: (cons autovar_sk_0 nil)
 ex is: (cons autovar_sk_1 (cons autovar_sk_0 nil))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
 ex is: nil
 ex is: (cons autovar_sk_0 nil)
 ex is: (cons autovar_sk_1 (cons autovar_sk_0 nil))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
Running TheSy on datatypes: Nat list dict: take len butlast -2 nil cons Z S
14:49:26 [0m[33m[WARN] [0m# of splitters: 1
14:49:26 [0m[33m[WARN] [0m# of splitters: 1
14:49:26 [0m[33m[WARN] [0m# of splitters: 2
14:49:26 [0m[33m[WARN] [0m# of splitters: 1
14:49:26 [0m[33m[WARN] [0m# of splitters: 3
14:49:26 [0m[33m[WARN] [0m# of splitters: 1
14:49:26 [0m[33m[WARN] [0m# of splitters: 1
Starting depth 1
14:49:26 [0m[33m[WARN] [0m# of splitters: 4
14:49:26 [0m[33m[WARN] [0m# of splitters: 3
14:49:26 [0m[33m[WARN] [0m# of splitters: 4
14:49:27 [0m[33m[WARN] [0m# of splitters: 2
14:49:27 [0m[33m[WARN] [0m# of splitters: 3
14:49:27 [0m[33m[WARN] [0m# of splitters: 1
14:49:27 [0m[33m[WARN] [0m# of splitters: 1
14:49:27 [0m[33m[WARN] [0mproved: (-2 ?ts_ph_Nat_0 ?ts_ph_Nat_0) => Z
14:49:27 [0m[33m[WARN] [0m# of splitters: 1
14:49:27 [0m[33m[WARN] [0m# of splitters: 1
14:49:27 [0m[33m[WARN] [0m# of splitters: 2
14:49:27 [0m[33m[WARN] [0m# of splitters: 1
14:49:27 [0m[33m[WARN] [0m# of splitters: 3
14:49:27 [0m[33m[WARN] [0m# of splitters: 1
14:49:27 [0m[33m[WARN] [0m# of splitters: 1
14:49:27 [0m[33m[WARN] [0mproved: (-2 ?ts_ph_Nat_0 Z) => ?ts_ph_Nat_0
14:49:27 [0m[33m[WARN] [0m# of splitters: 1
14:49:28 [0m[33m[WARN] [0m# of splitters: 1
14:49:28 [0m[33m[WARN] [0mproved: (take ?ts_ph_Nat_0 nil) => nil
14:49:28 [0m[33m[WARN] [0m# of splitters: 1
14:49:28 [0m[33m[WARN] [0m# of splitters: 1
Starting depth 2
14:49:28 [0m[33m[WARN] [0m# of splitters: 26
14:49:28 [0m[33m[WARN] [0m# of splitters: 20
14:49:32 [0m[33m[WARN] [0m# of splitters: 26
14:49:39 [0m[33m[WARN] [0m# of splitters: 17
14:49:42 [0m[33m[WARN] [0m# of splitters: 24
14:49:47 [0m[33m[WARN] [0m# of splitters: 18
14:49:49 [0m[33m[WARN] [0m# of splitters: 23
14:49:53 [0m[33m[WARN] [0m# of splitters: 17
14:49:54 [0m[33m[WARN] [0m# of splitters: 22
14:49:55 [0m[33m[WARN] [0m# of splitters: 21
14:49:58 [0m[33m[WARN] [0m# of splitters: 22
14:50:00 [0m[33m[WARN] [0m# of splitters: 20
14:50:06 [0m[33m[WARN] [0m# of splitters: 19
14:50:07 [0m[33m[WARN] [0m# of splitters: 19
14:50:09 [0m[33m[WARN] [0m# of splitters: 20
14:50:11 [0m[33m[WARN] [0m# of splitters: 18
14:50:15 [0m[33m[WARN] [0m# of splitters: 19
14:50:18 [0m[33m[WARN] [0m# of splitters: 17
14:50:21 [0m[33m[WARN] [0m# of splitters: 18
14:50:22 [0m[33m[WARN] [0m# of splitters: 15
14:50:23 [0m[33m[WARN] [0m# of splitters: 16
14:50:25 [0m[33m[WARN] [0m# of splitters: 15
14:50:27 [0m[33m[WARN] [0m# of splitters: 15
14:50:28 [0m[33m[WARN] [0m# of splitters: 14
14:50:29 [0m[33m[WARN] [0m# of splitters: 14
14:50:29 [0m[33m[WARN] [0m# of splitters: 13
14:50:30 [0m[33m[WARN] [0m# of splitters: 13
14:50:32 [0m[33m[WARN] [0m# of splitters: 12
14:50:33 [0m[33m[WARN] [0m# of splitters: 12
14:50:35 [0m[33m[WARN] [0m# of splitters: 11
14:50:37 [0m[33m[WARN] [0m# of splitters: 11
14:50:38 [0m[33m[WARN] [0m# of splitters: 10
14:50:39 [0m[33m[WARN] [0m# of splitters: 10
14:50:40 [0m[33m[WARN] [0m# of splitters: 9
14:50:42 [0m[33m[WARN] [0m# of splitters: 9
14:50:43 [0m[33m[WARN] [0m# of splitters: 8
14:50:44 [0m[33m[WARN] [0m# of splitters: 8
14:50:44 [0m[33m[WARN] [0mproved: (take (len ?ts_ph_list_0) ?ts_ph_list_0) => ?ts_ph_list_0
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0mproved: (take (len ?ts_ph_list_0) (cons ?ts_ph_sk_1 ?ts_ph_list_0)) => (butlast (cons ?ts_ph_sk_1 ?ts_ph_list_0))
14:50:44 [0m[33m[WARN] [0mproved: (butlast (cons ?ts_ph_sk_1 ?ts_ph_list_0)) => (take (len ?ts_ph_list_0) (cons ?ts_ph_sk_1 ?ts_ph_list_0))
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
14:50:44 [0m[33m[WARN] [0m# of splitters: 1
proved: (butlast ?ts_ph_list_0) => (take (-2 (len ?ts_ph_list_0) (S Z)) ?ts_ph_list_0)
proved: (take (-2 (len ?ts_ph_list_0) (S Z)) ?ts_ph_list_0) => (butlast ?ts_ph_list_0)
14:50:44 [0m[33m[WARN] [0mFound all lemmas
done in 77940
