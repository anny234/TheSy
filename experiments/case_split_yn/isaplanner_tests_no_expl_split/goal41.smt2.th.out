Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(take ?x nil) => nil
(take zero ?x2) => nil
(take (succ ?x) (cons ?y ?z)) => (cons ?y (take ?x ?z))
(cons ?y (take ?x ?z)) => (take (succ ?x) (cons ?y ?z))
(lmap nil) => nil
nil => (lmap nil)
(lmap (cons ?x ?y3)) => (cons (f ?x) (lmap ?y3))
(cons (f ?x) (lmap ?y3)) => (lmap (cons ?x ?y3))
(take ?autovar5 (cons ?autovar2 ?autovar3)) => (potential_split ?autovar5 (succ (param_Nat_0 ?autovar5)) zero) if Cond(var: ?autovar5, pat: (succ ?param_0)) Cond(var: ?autovar5, pat: zero)
(take (succ ?autovar4) ?autovar6) => (potential_split ?autovar6 (cons (param_Lst_0 ?autovar6) (param_Lst_1 ?autovar6)) nil) if Cond(var: ?autovar6, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar6, pat: nil)
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Nat Lst dict: f take lmap leq succ zero cons nil
Starting depth 1
14:10:47 [0m[33m[WARN] [0m# of splitters: 4
14:10:47 [0m[33m[WARN] [0m# of splitters: 3
14:10:47 [0m[33m[WARN] [0m# of splitters: 3
14:10:47 [0m[33m[WARN] [0m# of splitters: 2
14:10:48 [0m[33m[WARN] [0m# of splitters: 2
14:10:48 [0m[33m[WARN] [0m# of splitters: 1
14:10:48 [0m[33m[WARN] [0m# of splitters: 1
14:10:48 [0m[33m[WARN] [0mproved: (leq zero ?ts_ph_Nat_0) => true
Starting depth 2
14:10:49 [0m[33m[WARN] [0m# of splitters: 23
14:10:49 [0m[33m[WARN] [0m# of splitters: 22
14:11:33 [0m[33m[WARN] [0m# of splitters: 18
14:11:53 [0m[33m[WARN] [0m# of splitters: 21
14:12:22 [0m[33m[WARN] [0m# of splitters: 17
14:12:33 [0m[33m[WARN] [0m# of splitters: 20
14:13:02 [0m[33m[WARN] [0m# of splitters: 15
14:13:20 [0m[33m[WARN] [0m# of splitters: 19
14:13:40 [0m[33m[WARN] [0m# of splitters: 14
14:14:02 [0m[33m[WARN] [0m# of splitters: 18
14:14:35 [0m[33m[WARN] [0m# of splitters: 18
14:14:46 [0m[33m[WARN] [0m# of splitters: 17
14:15:09 [0m[33m[WARN] [0m# of splitters: 17
14:15:24 [0m[33m[WARN] [0m# of splitters: 16
14:15:24 [0m[33m[WARN] [0m# of splitters: 16
14:15:35 [0m[33m[WARN] [0m# of splitters: 15
14:15:50 [0m[33m[WARN] [0m# of splitters: 15
14:15:58 [0m[33m[WARN] [0m# of splitters: 14
14:16:05 [0m[33m[WARN] [0m# of splitters: 14
14:16:20 [0m[33m[WARN] [0m# of splitters: 13
14:16:35 [0m[33m[WARN] [0m# of splitters: 13
14:16:43 [0m[33m[WARN] [0m# of splitters: 12
14:16:47 [0m[33m[WARN] [0m# of splitters: 12
14:16:54 [0m[33m[WARN] [0m# of splitters: 11
14:17:10 [0m[33m[WARN] [0m# of splitters: 11
14:17:14 [0m[33m[WARN] [0m# of splitters: 10
14:17:18 [0m[33m[WARN] [0m# of splitters: 10
14:17:22 [0m[33m[WARN] [0m# of splitters: 9
14:17:26 [0m[33m[WARN] [0m# of splitters: 9
14:17:34 [0m[33m[WARN] [0m# of splitters: 8
14:17:38 [0m[33m[WARN] [0m# of splitters: 8
14:17:46 [0m[33m[WARN] [0m# of splitters: 7
14:17:46 [0m[33m[WARN] [0m# of splitters: 7
14:17:54 [0m[33m[WARN] [0m# of splitters: 6
14:17:58 [0m[33m[WARN] [0m# of splitters: 6
14:18:02 [0m[33m[WARN] [0m# of splitters: 5
14:18:02 [0m[33m[WARN] [0m# of splitters: 5
14:18:06 [0m[33m[WARN] [0mproved: (leq (succ zero) (succ ?ts_ph_Nat_0)) => true
done in 439674
