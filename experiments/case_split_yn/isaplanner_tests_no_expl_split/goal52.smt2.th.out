Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(append nil ?x) => ?x
(append (cons ?x2 ?y) ?z) => (cons ?x2 (append ?y ?z))
(cons ?x2 (append ?y ?z)) => (append (cons ?x2 ?y) ?z)
(count ?x3 nil) => zero
(count ?x4 (cons ?y5 ?z)) => (ite (= ?x4 ?y5) (succ (count ?x4 ?z)) (count ?x4 ?z))
(ite (= ?x4 ?y5) (succ (count ?x4 ?z)) (count ?x4 ?z)) => (count ?x4 (cons ?y5 ?z))
(rev nil) => nil
nil => (rev nil)
(rev (cons ?x6 ?y)) => (append (rev ?y) (cons ?x6 nil))
(append (rev ?y) (cons ?x6 nil)) => (rev (cons ?x6 ?y))
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Lst Nat dict: append count rev leq succ zero cons nil
Starting depth 1
14:10:50 [0m[33m[WARN] [0m# of splitters: 6
14:10:50 [0m[33m[WARN] [0m# of splitters: 5
14:10:50 [0m[33m[WARN] [0m# of splitters: 5
14:10:50 [0m[33m[WARN] [0m# of splitters: 4
14:10:50 [0m[33m[WARN] [0m# of splitters: 4
14:10:50 [0m[33m[WARN] [0m# of splitters: 3
14:10:50 [0m[33m[WARN] [0m# of splitters: 3
14:10:50 [0m[33m[WARN] [0m# of splitters: 2
14:10:50 [0m[33m[WARN] [0m# of splitters: 2
14:10:50 [0m[33m[WARN] [0m# of splitters: 1
14:10:50 [0m[33m[WARN] [0m# of splitters: 1
14:10:50 [0m[33m[WARN] [0mproved: (leq zero ?ts_ph_Nat_0) => true

14:10:50 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_0 nil) => ?ts_ph_Lst_0

Starting depth 2
14:10:51 [0m[33m[WARN] [0m# of splitters: 111
14:10:51 [0m[33m[WARN] [0m# of splitters: 93
14:10:51 [0m[33m[WARN] [0m# of splitters: 107
14:10:51 [0m[33m[WARN] [0m# of splitters: 98
14:10:52 [0m[33m[WARN] [0m# of splitters: 105
14:10:53 [0m[33m[WARN] [0m# of splitters: 91
14:10:53 [0m[33m[WARN] [0m# of splitters: 105
14:10:54 [0m[33m[WARN] [0m# of splitters: 96
14:10:54 [0m[33m[WARN] [0m# of splitters: 103
14:10:55 [0m[33m[WARN] [0m# of splitters: 89
14:10:55 [0m[33m[WARN] [0m# of splitters: 103
14:10:56 [0m[33m[WARN] [0m# of splitters: 94
14:10:56 [0m[33m[WARN] [0m# of splitters: 101
14:10:57 [0m[33m[WARN] [0m# of splitters: 55
14:10:57 [0m[33m[WARN] [0m# of splitters: 104
14:10:57 [0m[33m[WARN] [0m# of splitters: 68
14:10:57 [0m[33m[WARN] [0m# of splitters: 103
14:10:58 [0m[33m[WARN] [0m# of splitters: 95
14:10:58 [0m[33m[WARN] [0m# of splitters: 101
14:10:58 [0m[33m[WARN] [0m# of splitters: 100
14:10:59 [0m[33m[WARN] [0m# of splitters: 100
14:10:59 [0m[33m[WARN] [0m# of splitters: 99
14:11:00 [0m[33m[WARN] [0m# of splitters: 99
14:11:00 [0m[33m[WARN] [0m# of splitters: 2
14:11:00 [0m[33m[WARN] [0m# of splitters: 98
14:11:02 [0m[33m[WARN] [0m# of splitters: 90
14:11:02 [0m[33m[WARN] [0m# of splitters: 93
14:11:03 [0m[33m[WARN] [0m# of splitters: 87
14:11:04 [0m[33m[WARN] [0m# of splitters: 92
14:11:04 [0m[33m[WARN] [0m# of splitters: 87
14:11:05 [0m[33m[WARN] [0m# of splitters: 91
14:11:05 [0m[33m[WARN] [0m# of splitters: 86
14:11:06 [0m[33m[WARN] [0m# of splitters: 90
14:11:06 [0m[33m[WARN] [0m# of splitters: 2
14:11:06 [0m[33m[WARN] [0m# of splitters: 89
14:11:06 [0m[33m[WARN] [0m# of splitters: 55
14:11:06 [0m[33m[WARN] [0m# of splitters: 87
14:11:07 [0m[33m[WARN] [0m# of splitters: 55
14:11:07 [0m[33m[WARN] [0m# of splitters: 86
14:11:08 [0m[33m[WARN] [0m# of splitters: 84
14:11:09 [0m[33m[WARN] [0m# of splitters: 85
14:11:09 [0m[33m[WARN] [0m# of splitters: 81
14:11:10 [0m[33m[WARN] [0m# of splitters: 84
14:11:10 [0m[33m[WARN] [0m# of splitters: 78
14:11:11 [0m[33m[WARN] [0m# of splitters: 83
14:11:11 [0m[33m[WARN] [0m# of splitters: 83
14:11:12 [0m[33m[WARN] [0m# of splitters: 82
14:11:12 [0m[33m[WARN] [0m# of splitters: 37
14:11:13 [0m[33m[WARN] [0m# of splitters: 81
14:11:14 [0m[33m[WARN] [0m# of splitters: 49
14:11:14 [0m[33m[WARN] [0m# of splitters: 79
14:11:14 [0m[33m[WARN] [0m# of splitters: 74
14:11:15 [0m[33m[WARN] [0m# of splitters: 77
14:11:15 [0m[33m[WARN] [0m# of splitters: 77
14:11:16 [0m[33m[WARN] [0m# of splitters: 76
14:11:16 [0m[33m[WARN] [0m# of splitters: 76
14:11:17 [0m[33m[WARN] [0m# of splitters: 75
14:11:17 [0m[33m[WARN] [0m# of splitters: 2
14:11:17 [0m[33m[WARN] [0m# of splitters: 74
14:11:17 [0m[33m[WARN] [0m# of splitters: 70
14:11:17 [0m[33m[WARN] [0m# of splitters: 72
generalizing (append (append ts_ph_Lst_0 ts_ph_Lst_1) ts_ph_Lst_1) = (append ts_ph_Lst_0 (append ts_ph_Lst_1 ts_ph_Lst_1))
generalized as case_split
14:11:17 [0m[33m[WARN] [0mproved: (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2) => (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2))
14:11:17 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)) => (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2)
14:11:17 [0m[33m[WARN] [0mproved: (leq (succ zero) (succ ?ts_ph_Nat_0)) => true
generalizing (append ts_ph_Lst_0 (append ts_ph_Lst_1 ts_ph_Lst_1)) = (append (append ts_ph_Lst_0 ts_ph_Lst_1) ts_ph_Lst_1)
generalized as case_split
14:11:17 [0m[33m[WARN] [0m# of splitters: 1
14:11:17 [0m[33m[WARN] [0m# of splitters: 1
done in 26998
