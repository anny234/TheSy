Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(append nil ?x) => ?x
(append (cons ?x2 ?y) ?z) => (cons ?x2 (append ?y ?z))
(cons ?x2 (append ?y ?z)) => (append (cons ?x2 ?y) ?z)
(len nil) => zero
zero => (len nil)
(len (cons ?x3 ?y)) => (succ (len ?y))
(rev nil) => nil
nil => (rev nil)
(rev (cons ?x4 ?y)) => (append (rev ?y) (cons ?x4 nil))
(append (rev ?y) (cons ?x4 nil)) => (rev (cons ?x4 ?y))
(zip nil ?x) => znil
(zip ?x nil) => znil
(zip (cons ?x5 ?y) (cons ?z6 ?w)) => (zcons (mkpair ?x5 ?z6) (zip ?y ?w))
(zcons (mkpair ?x5 ?z6) (zip ?y ?w)) => (zip (cons ?x5 ?y) (cons ?z6 ?w))
(zappend znil ?x7) => ?x7
(zappend (zcons ?x8 ?y9) ?z10) => (zcons ?x8 (zappend ?y9 ?z10))
(zcons ?x8 (zappend ?y9 ?z10)) => (zappend (zcons ?x8 ?y9) ?z10)
(zrev znil) => znil
znil => (zrev znil)
(zrev (zcons ?x11 ?y12)) => (zappend (zrev ?y12) (zcons ?x11 znil))
(zappend (zrev ?y12) (zcons ?x11 znil)) => (zrev (zcons ?x11 ?y12))
(append ?autovar3 (cons ?autovar2 nil)) => (potential_split ?autovar3 (cons (param_Lst_0 ?autovar3) (param_Lst_1 ?autovar3)) nil) if Cond(var: ?autovar3, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar3, pat: nil)
(zip ?autovar7 (cons ?autovar3 ?autovar4)) => (potential_split ?autovar7 (cons (param_Lst_0 ?autovar7) (param_Lst_1 ?autovar7)) nil) if Cond(var: ?autovar7, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar7, pat: nil)
(zip (cons ?autovar5 ?autovar6) ?autovar8) => (potential_split ?autovar8 (cons (param_Lst_0 ?autovar8) (param_Lst_1 ?autovar8)) nil) if Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar8, pat: nil)
(zappend ?autovar3 (zcons ?autovar2 znil)) => (potential_split ?autovar3 (zcons (param_ZLst_0 ?autovar3) (param_ZLst_1 ?autovar3)) znil) if Cond(var: ?autovar3, pat: (zcons ?param_0 ?param_1)) Cond(var: ?autovar3, pat: znil)
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
 ex is: (mkpair autovar_Nat_0 autovar_Nat_1)
 ex is: znil
 ex is: (zcons autovar_Pair_0 znil)
 ex is: (zcons autovar_Pair_1 (zcons autovar_Pair_0 znil))
Running TheSy on datatypes: Lst Pair Nat ZLst dict: append len rev zip zappend zrev leq succ zero cons nil mkpair zcons znil
Starting depth 1
01:22:01 [0m[33m[WARN] [0m# of splitters: 2
01:22:01 [0m[33m[WARN] [0m# of splitters: 4
01:22:01 [0m[33m[WARN] [0m# of splitters: 1
01:22:01 [0m[33m[WARN] [0m# of splitters: 2
01:22:01 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_0 nil) => ?ts_ph_Lst_0
01:22:01 [0m[33m[WARN] [0mproved: (leq zero ?ts_ph_Nat_0) => true

01:22:01 [0m[33m[WARN] [0mproved: (zappend ?ts_ph_ZLst_0 znil) => ?ts_ph_ZLst_0

Starting depth 2
01:22:02 [0m[33m[WARN] [0m# of splitters: 30
01:22:02 [0m[33m[WARN] [0m# of splitters: 38
01:22:07 [0m[33m[WARN] [0m# of splitters: 18
01:22:09 [0m[33m[WARN] [0m# of splitters: 34
01:22:12 [0m[33m[WARN] [0m# of splitters: 23
01:22:13 [0m[33m[WARN] [0m# of splitters: 29
01:22:17 [0m[33m[WARN] [0m# of splitters: 27
01:22:19 [0m[33m[WARN] [0m# of splitters: 28
01:22:22 [0m[33m[WARN] [0m# of splitters: 26
01:22:26 [0m[33m[WARN] [0m# of splitters: 27
01:22:30 [0m[33m[WARN] [0m# of splitters: 25
01:22:33 [0m[33m[WARN] [0m# of splitters: 26
01:22:36 [0m[33m[WARN] [0m# of splitters: 24
01:22:39 [0m[33m[WARN] [0m# of splitters: 25
01:22:42 [0m[33m[WARN] [0m# of splitters: 22
01:22:45 [0m[33m[WARN] [0m# of splitters: 27
01:22:49 [0m[33m[WARN] [0m# of splitters: 18
01:22:50 [0m[33m[WARN] [0m# of splitters: 23
01:22:52 [0m[33m[WARN] [0m# of splitters: 21
01:22:55 [0m[33m[WARN] [0m# of splitters: 22
01:22:57 [0m[33m[WARN] [0m# of splitters: 20
01:22:58 [0m[33m[WARN] [0m# of splitters: 21
01:23:00 [0m[33m[WARN] [0m# of splitters: 19
01:23:02 [0m[33m[WARN] [0m# of splitters: 22
01:23:03 [0m[33m[WARN] [0m# of splitters: 14
01:23:04 [0m[33m[WARN] [0m# of splitters: 19
01:23:05 [0m[33m[WARN] [0m# of splitters: 17
01:23:06 [0m[33m[WARN] [0m# of splitters: 18
01:23:07 [0m[33m[WARN] [0m# of splitters: 16
01:23:08 [0m[33m[WARN] [0m# of splitters: 17
01:23:10 [0m[33m[WARN] [0m# of splitters: 15
01:23:11 [0m[33m[WARN] [0m# of splitters: 16
01:23:12 [0m[33m[WARN] [0m# of splitters: 14
01:23:13 [0m[33m[WARN] [0m# of splitters: 15
01:23:15 [0m[33m[WARN] [0m# of splitters: 13
01:23:16 [0m[33m[WARN] [0m# of splitters: 14
01:23:18 [0m[33m[WARN] [0m# of splitters: 12
01:23:19 [0m[33m[WARN] [0m# of splitters: 13
01:23:19 [0m[33m[WARN] [0m# of splitters: 11
01:23:20 [0m[33m[WARN] [0m# of splitters: 12
01:23:22 [0m[33m[WARN] [0m# of splitters: 10
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
generalizing (zappend ts_ph_ZLst_0 (zappend ts_ph_ZLst_1 ts_ph_ZLst_1)) = (zappend (zappend ts_ph_ZLst_0 ts_ph_ZLst_1) ts_ph_ZLst_1)
01:23:24 [0m[33m[WARN] [0mproved: (zappend ?ts_ph_ZLst_0 (zappend ?ts_ph_ZLst_1 ?ts_ph_ZLst_2)) => (zappend (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1) ?ts_ph_ZLst_2)
01:23:24 [0m[33m[WARN] [0mproved: (zappend (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1) ?ts_ph_ZLst_2) => (zappend ?ts_ph_ZLst_0 (zappend ?ts_ph_ZLst_1 ?ts_ph_ZLst_2))
generalizing (append ts_ph_Lst_0 (append ts_ph_Lst_1 ts_ph_Lst_1)) = (append (append ts_ph_Lst_0 ts_ph_Lst_1) ts_ph_Lst_1)
01:23:24 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)) => (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2)
01:23:24 [0m[33m[WARN] [0mproved: (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2) => (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2))
01:23:24 [0m[33m[WARN] [0mproved: (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_0) => (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 3
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 3
01:23:24 [0m[33m[WARN] [0m# of splitters: 4
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 8
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 4
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
generalizing (zappend (zip ts_ph_Lst_0 ts_ph_Lst_0) (zip ts_ph_Lst_1 ts_ph_Lst_1)) = (zip (append ts_ph_Lst_0 ts_ph_Lst_1) (append ts_ph_Lst_0 ts_ph_Lst_1))
01:23:24 [0m[33m[WARN] [0mproved: (zappend (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0) (zip ?ts_ph_Lst_1 ?ts_ph_Lst_2)) => (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) (append ?ts_ph_Lst_0 ?ts_ph_Lst_2))
01:23:24 [0m[33m[WARN] [0mproved: (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) (append ?ts_ph_Lst_0 ?ts_ph_Lst_2)) => (zappend (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0) (zip ?ts_ph_Lst_1 ?ts_ph_Lst_2))
01:23:24 [0m[33m[WARN] [0mproved: (zip (cons ?ts_ph_Nat_1 nil) (append ?ts_ph_Lst_0 ?ts_ph_Lst_0)) => (zip (cons ?ts_ph_Nat_1 nil) ?ts_ph_Lst_0)
01:23:24 [0m[33m[WARN] [0mproved: (zip (cons ?ts_ph_Nat_1 nil) ?ts_ph_Lst_0) => (zip (cons ?ts_ph_Nat_1 nil) (append ?ts_ph_Lst_0 ?ts_ph_Lst_0))
01:23:24 [0m[33m[WARN] [0mproved: (zip ?ts_ph_Lst_0 (cons ?ts_ph_Nat_1 nil)) => (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_0) (cons ?ts_ph_Nat_1 nil))
01:23:24 [0m[33m[WARN] [0mproved: (zip (append ?ts_ph_Lst_0 ?ts_ph_Lst_0) (cons ?ts_ph_Nat_1 nil)) => (zip ?ts_ph_Lst_0 (cons ?ts_ph_Nat_1 nil))
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
generalizing (zappend (zappend ts_ph_ZLst_0 ts_ph_ZLst_1) ts_ph_ZLst_1) = (zappend ts_ph_ZLst_0 (zappend ts_ph_ZLst_1 ts_ph_ZLst_1))
generalizing (append (append ts_ph_Lst_0 ts_ph_Lst_1) ts_ph_Lst_1) = (append ts_ph_Lst_0 (append ts_ph_Lst_1 ts_ph_Lst_1))
01:23:24 [0m[33m[WARN] [0mproved: (zip ?ts_ph_Lst_0 (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) => (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)

01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 2
01:23:24 [0m[33m[WARN] [0m# of splitters: 1
01:23:24 [0m[33m[WARN] [0mproved: (append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0)) => (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1))
01:23:24 [0m[33m[WARN] [0mproved: (rev (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) => (append (rev ?ts_ph_Lst_1) (rev ?ts_ph_Lst_0))

01:23:25 [0m[33m[WARN] [0m# of splitters: 1
01:23:25 [0m[33m[WARN] [0m# of splitters: 4
01:23:25 [0m[33m[WARN] [0mproved: (rev (rev ?ts_ph_Lst_0)) => ?ts_ph_Lst_0

01:23:27 [0m[33m[WARN] [0m# of splitters: 1
01:23:27 [0m[33m[WARN] [0m# of splitters: 1
01:23:27 [0m[33m[WARN] [0m# of splitters: 1
01:23:27 [0m[33m[WARN] [0m# of splitters: 2
01:23:27 [0m[33m[WARN] [0m# of splitters: 2
01:23:27 [0m[33m[WARN] [0m# of splitters: 2
01:23:27 [0m[33m[WARN] [0m# of splitters: 1
01:23:27 [0m[33m[WARN] [0m# of splitters: 1
01:23:27 [0m[33m[WARN] [0mproved: (zappend (zrev ?ts_ph_ZLst_1) (zrev ?ts_ph_ZLst_0)) => (zrev (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1))
01:23:27 [0m[33m[WARN] [0mproved: (zrev (zappend ?ts_ph_ZLst_0 ?ts_ph_ZLst_1)) => (zappend (zrev ?ts_ph_ZLst_1) (zrev ?ts_ph_ZLst_0))

01:23:36 [0m[33m[WARN] [0m# of splitters: 1
01:23:36 [0m[33m[WARN] [0m# of splitters: 1
01:23:36 [0m[33m[WARN] [0m# of splitters: 1
01:23:36 [0m[33m[WARN] [0m# of splitters: 4
01:23:36 [0m[33m[WARN] [0mproved: (zrev (zrev ?ts_ph_ZLst_0)) => ?ts_ph_ZLst_0

01:23:55 [0m[33m[WARN] [0m# of splitters: 1
01:23:55 [0m[33m[WARN] [0m# of splitters: 1
01:23:55 [0m[33m[WARN] [0m# of splitters: 1
01:23:55 [0m[33m[WARN] [0m# of splitters: 3
01:23:55 [0m[33m[WARN] [0m# of splitters: 11
01:23:55 [0m[33m[WARN] [0m# of splitters: 45
01:23:56 [0m[33m[WARN] [0m# of splitters: 28
01:23:57 [0m[33m[WARN] [0m# of splitters: 35
01:23:57 [0m[33m[WARN] [0m# of splitters: 33
01:23:57 [0m[33m[WARN] [0m# of splitters: 44
01:23:57 [0m[33m[WARN] [0m# of splitters: 74
01:23:58 [0m[33m[WARN] [0mproved: (zip (rev ?ts_ph_Lst_0) (rev ?ts_ph_Lst_0)) => (zrev (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0))
01:23:58 [0m[33m[WARN] [0mproved: (zrev (zip ?ts_ph_Lst_0 ?ts_ph_Lst_0)) => (zip (rev ?ts_ph_Lst_0) (rev ?ts_ph_Lst_0))

01:24:24 [0m[33m[WARN] [0m# of splitters: 1
01:24:24 [0m[33m[WARN] [0m# of splitters: 1
01:24:24 [0m[33m[WARN] [0m# of splitters: 1
01:24:24 [0m[33m[WARN] [0m# of splitters: 3
01:24:24 [0m[33m[WARN] [0m# of splitters: 11
01:24:24 [0m[33m[WARN] [0m# of splitters: 45
01:24:24 [0m[33m[WARN] [0m# of splitters: 28
01:24:29 [0m[33m[WARN] [0m# of splitters: 35
01:24:30 [0m[33m[WARN] [0m# of splitters: 34
01:24:31 [0m[33m[WARN] [0m# of splitters: 44
01:24:31 [0m[33m[WARN] [0m# of splitters: 74
01:24:31 [0m[33m[WARN] [0mproved: (leq (succ zero) (succ ?ts_ph_Nat_0)) => true

01:32:10 [0m[33m[WARN] [0m# of splitters: 1
01:32:10 [0m[33m[WARN] [0m# of splitters: 3
01:32:10 [0m[33m[WARN] [0m# of splitters: 1
01:32:10 [0m[33m[WARN] [0m# of splitters: 1
01:32:10 [0m[33m[WARN] [0m# of splitters: 11
01:32:10 [0m[33m[WARN] [0m# of splitters: 45
01:32:13 [0m[33m[WARN] [0m# of splitters: 28
01:32:21 [0m[33m[WARN] [0m# of splitters: 35
01:32:21 [0m[33m[WARN] [0m# of splitters: 34
01:32:24 [0m[33m[WARN] [0m# of splitters: 44
01:32:24 [0m[33m[WARN] [0m# of splitters: 74
01:32:25 [0m[33m[WARN] [0m# of splitters: 2
01:32:25 [0m[33m[WARN] [0m# of splitters: 1
01:32:25 [0m[33m[WARN] [0m# of splitters: 4
01:32:25 [0m[33m[WARN] [0m# of splitters: 1
01:32:25 [0m[33m[WARN] [0m# of splitters: 2
01:32:25 [0m[33m[WARN] [0m# of splitters: 1
01:32:25 [0m[33m[WARN] [0m# of splitters: 4
01:32:25 [0m[33m[WARN] [0m# of splitters: 1
01:32:25 [0m[33m[WARN] [0m# of splitters: 2
01:32:25 [0m[33m[WARN] [0m# of splitters: 1
01:32:25 [0m[33m[WARN] [0m# of splitters: 6
01:32:25 [0m[33m[WARN] [0m# of splitters: 1
01:32:25 [0m[33m[WARN] [0m# of splitters: 2
01:32:25 [0m[33m[WARN] [0m# of splitters: 1
01:32:25 [0m[33m[WARN] [0m# of splitters: 6
01:32:26 [0m[33m[WARN] [0m# of splitters: 1
01:32:26 [0m[33m[WARN] [0m# of splitters: 2
01:32:26 [0m[33m[WARN] [0m# of splitters: 2
01:32:26 [0m[33m[WARN] [0m# of splitters: 1
01:32:26 [0m[33m[WARN] [0m# of splitters: 4
01:32:26 [0m[33m[WARN] [0m# of splitters: 2
01:32:26 [0m[33m[WARN] [0m# of splitters: 2
01:32:26 [0m[33m[WARN] [0m# of splitters: 1
01:32:26 [0m[33m[WARN] [0m# of splitters: 4
done in 624686
