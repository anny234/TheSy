Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(append nil ?x) => ?x
(append (cons ?x2 ?y) ?z) => (cons ?x2 (append ?y ?z))
(cons ?x2 (append ?y ?z)) => (append (cons ?x2 ?y) ?z)
(len nil) => zero
zero => (len nil)
(len (cons ?x3 ?y)) => (succ (len ?y))
(rotate zero ?x) => ?x
(rotate (succ ?n) nil) => nil
(rotate (succ ?n) (cons ?y4 ?x)) => (rotate ?n (append ?x (cons ?y4 nil)))
(rotate ?n (append ?x (cons ?y4 nil))) => (rotate (succ ?n) (cons ?y4 ?x))
(rotate ?autovar7 nil) => (potential_split ?autovar7 (succ (param_Nat_0 ?autovar7)) zero) if Cond(var: ?autovar7, pat: (succ ?param_0)) Cond(var: ?autovar7, pat: zero)
(rotate ?autovar7 (cons ?autovar3 ?autovar4)) => (potential_split ?autovar7 (succ (param_Nat_0 ?autovar7)) zero) if Cond(var: ?autovar7, pat: (succ ?param_0)) Cond(var: ?autovar7, pat: zero)
(rotate (succ ?autovar5) ?autovar8) => (potential_split ?autovar8 (cons (param_Lst_0 ?autovar8) (param_Lst_1 ?autovar8)) nil) if Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar8, pat: nil)
(rotate (succ ?autovar6) ?autovar8) => (potential_split ?autovar8 (cons (param_Lst_0 ?autovar8) (param_Lst_1 ?autovar8)) nil) if Cond(var: ?autovar8, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar8, pat: nil)
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Nat Lst dict: append len rotate leq succ zero cons nil
Starting depth 1
01:16:41 [0m[33m[WARN] [0m# of splitters: 4
01:16:41 [0m[33m[WARN] [0m# of splitters: 4
01:16:42 [0m[33m[WARN] [0m# of splitters: 3
01:16:42 [0m[33m[WARN] [0m# of splitters: 3
01:16:42 [0m[33m[WARN] [0m# of splitters: 2
01:16:42 [0m[33m[WARN] [0m# of splitters: 2
01:16:42 [0m[33m[WARN] [0m# of splitters: 1
01:16:42 [0m[33m[WARN] [0m# of splitters: 1
01:16:42 [0m[33m[WARN] [0mproved: (rotate ?ts_ph_Nat_0 nil) => nil
01:16:42 [0m[33m[WARN] [0mproved: (leq zero ?ts_ph_Nat_0) => true
01:16:42 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_0 nil) => ?ts_ph_Lst_0
Starting depth 2
01:16:42 [0m[33m[WARN] [0m# of splitters: 36
01:16:42 [0m[33m[WARN] [0m# of splitters: 37
01:16:45 [0m[33m[WARN] [0m# of splitters: 32
01:16:45 [0m[33m[WARN] [0m# of splitters: 36
01:16:46 [0m[33m[WARN] [0m# of splitters: 30
01:16:47 [0m[33m[WARN] [0m# of splitters: 33
01:16:48 [0m[33m[WARN] [0m# of splitters: 26
01:16:49 [0m[33m[WARN] [0m# of splitters: 32
01:16:49 [0m[33m[WARN] [0m# of splitters: 24
01:16:49 [0m[33m[WARN] [0m# of splitters: 32
01:16:49 [0m[33m[WARN] [0m# of splitters: 31
01:16:50 [0m[33m[WARN] [0m# of splitters: 31
01:16:51 [0m[33m[WARN] [0m# of splitters: 30
01:16:52 [0m[33m[WARN] [0m# of splitters: 29
01:16:53 [0m[33m[WARN] [0m# of splitters: 29
01:16:54 [0m[33m[WARN] [0m# of splitters: 29
01:16:54 [0m[33m[WARN] [0m# of splitters: 28
01:16:55 [0m[33m[WARN] [0m# of splitters: 27
01:16:56 [0m[33m[WARN] [0m# of splitters: 27
01:16:57 [0m[33m[WARN] [0m# of splitters: 27
01:16:57 [0m[33m[WARN] [0m# of splitters: 26
01:16:58 [0m[33m[WARN] [0m# of splitters: 25
01:16:58 [0m[33m[WARN] [0m# of splitters: 25
01:16:58 [0m[33m[WARN] [0m# of splitters: 25
01:16:59 [0m[33m[WARN] [0m# of splitters: 24
01:17:01 [0m[33m[WARN] [0m# of splitters: 23
01:17:01 [0m[33m[WARN] [0m# of splitters: 23
01:17:01 [0m[33m[WARN] [0m# of splitters: 22
01:17:01 [0m[33m[WARN] [0m# of splitters: 21
01:17:02 [0m[33m[WARN] [0m# of splitters: 22
01:17:02 [0m[33m[WARN] [0m# of splitters: 21
01:17:02 [0m[33m[WARN] [0m# of splitters: 21
01:17:02 [0m[33m[WARN] [0m# of splitters: 20
01:17:03 [0m[33m[WARN] [0m# of splitters: 20
01:17:03 [0m[33m[WARN] [0m# of splitters: 19
01:17:03 [0m[33m[WARN] [0m# of splitters: 19
01:17:06 [0m[33m[WARN] [0m# of splitters: 18
01:17:06 [0m[33m[WARN] [0m# of splitters: 18
01:17:06 [0m[33m[WARN] [0m# of splitters: 17
01:17:06 [0m[33m[WARN] [0m# of splitters: 17
01:17:07 [0m[33m[WARN] [0m# of splitters: 16
01:17:07 [0m[33m[WARN] [0m# of splitters: 15
01:17:07 [0m[33m[WARN] [0m# of splitters: 15
01:17:08 [0m[33m[WARN] [0m# of splitters: 15
01:17:08 [0m[33m[WARN] [0m# of splitters: 14
01:17:08 [0m[33m[WARN] [0m# of splitters: 14
01:17:09 [0m[33m[WARN] [0m# of splitters: 13
01:17:09 [0m[33m[WARN] [0m# of splitters: 13
01:17:09 [0m[33m[WARN] [0m# of splitters: 12
01:17:09 [0m[33m[WARN] [0m# of splitters: 12
01:17:09 [0m[33m[WARN] [0m# of splitters: 11
01:17:09 [0m[33m[WARN] [0m# of splitters: 10
01:17:09 [0m[33m[WARN] [0m# of splitters: 10
01:17:09 [0m[33m[WARN] [0m# of splitters: 1
01:17:09 [0m[33m[WARN] [0m# of splitters: 1
01:17:09 [0m[33m[WARN] [0mproved: (leq (succ zero) (succ ?ts_ph_Nat_0)) => true
01:17:09 [0m[33m[WARN] [0m# of splitters: 1
01:17:09 [0m[33m[WARN] [0m# of splitters: 1
01:17:09 [0m[33m[WARN] [0mproved: (rotate (len ?ts_ph_Lst_0) (cons zero nil)) => (cons zero nil)
generalizing (append (append ts_ph_Lst_0 ts_ph_Lst_1) ts_ph_Lst_1) = (append ts_ph_Lst_0 (append ts_ph_Lst_1 ts_ph_Lst_1))
01:17:09 [0m[33m[WARN] [0mproved: (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2) => (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2))
01:17:09 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)) => (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2)

01:17:09 [0m[33m[WARN] [0m# of splitters: 1
01:17:09 [0m[33m[WARN] [0m# of splitters: 1
01:17:09 [0m[33m[WARN] [0mproved: (rotate ?ts_ph_Nat_0 (cons ?ts_ph_Nat_1 nil)) => (cons ?ts_ph_Nat_1 nil)

01:17:09 [0m[33m[WARN] [0mproved: (rotate (len ?ts_ph_Lst_0) (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) => (append ?ts_ph_Lst_1 ?ts_ph_Lst_0)
01:17:09 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_1 ?ts_ph_Lst_0) => (rotate (len ?ts_ph_Lst_0) (append ?ts_ph_Lst_0 ?ts_ph_Lst_1))

01:17:10 [0m[33m[WARN] [0m# of splitters: 3
01:17:10 [0m[33m[WARN] [0m# of splitters: 4
01:17:10 [0m[33m[WARN] [0m# of splitters: 1
01:17:10 [0m[33m[WARN] [0m# of splitters: 1
01:17:10 [0m[33m[WARN] [0m# of splitters: 1
01:17:10 [0m[33m[WARN] [0mproved: (rotate (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1) => (rotate (succ zero) (rotate ?ts_ph_Nat_0 ?ts_ph_Lst_1))
01:17:10 [0m[33m[WARN] [0mproved: (rotate (succ zero) (rotate ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (rotate (succ ?ts_ph_Nat_0) ?ts_ph_Lst_1)

01:17:14 [0m[33m[WARN] [0m# of splitters: 4
01:17:14 [0m[33m[WARN] [0m# of splitters: 4
01:17:14 [0m[33m[WARN] [0m# of splitters: 5
01:17:14 [0m[33m[WARN] [0m# of splitters: 4
01:17:14 [0m[33m[WARN] [0m# of splitters: 2
01:17:14 [0m[33m[WARN] [0m# of splitters: 1
01:17:14 [0m[33m[WARN] [0m# of splitters: 5
01:17:14 [0m[33m[WARN] [0m# of splitters: 1
01:17:14 [0m[33m[WARN] [0m# of splitters: 9
01:17:14 [0m[33m[WARN] [0mproved: (rotate ?ts_ph_Nat_0 (rotate ?ts_ph_Nat_1 ?ts_ph_Lst_1)) => (rotate ?ts_ph_Nat_1 (rotate ?ts_ph_Nat_0 ?ts_ph_Lst_1))
01:17:14 [0m[33m[WARN] [0mproved: (rotate ?ts_ph_Nat_1 (rotate ?ts_ph_Nat_0 ?ts_ph_Lst_1)) => (rotate ?ts_ph_Nat_0 (rotate ?ts_ph_Nat_1 ?ts_ph_Lst_1))

done in 36083
