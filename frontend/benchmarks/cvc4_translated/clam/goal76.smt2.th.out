Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(qrevaflat leaf ?x) => ?x
(qrevaflat (node ?d ?l ?r) ?x) => (qrevaflat ?l (cons ?d (qrevaflat ?r ?x)))
(qrevaflat ?l (cons ?d (qrevaflat ?r ?x))) => (qrevaflat (node ?d ?l ?r) ?x)
(append nil ?x) => ?x
(append (cons ?x2 ?y) ?z) => (cons ?x2 (append ?y ?z))
(cons ?x2 (append ?y ?z)) => (append (cons ?x2 ?y) ?z)
(rev nil) => nil
nil => (rev nil)
(rev (cons ?x3 ?y)) => (append (rev ?y) (cons ?x3 nil))
(append (rev ?y) (cons ?x3 nil)) => (rev (cons ?x3 ?y))
(qreva nil ?x) => ?x
(qreva (cons ?z4 ?x) ?y) => (qreva ?x (cons ?z4 ?y))
(qreva ?x (cons ?z4 ?y)) => (qreva (cons ?z4 ?x) ?y)
(revflat leaf) => nil
nil => (revflat leaf)
(revflat (node ?d ?l ?r)) => (append (revflat ?l) (cons ?d (revflat ?r)))
(append (revflat ?l) (cons ?d (revflat ?r))) => (revflat (node ?d ?l ?r))
(append ?autovar6 (cons ?autovar2 nil)) => (potential_split ?autovar6 (cons (param_Lst_0 ?autovar6) (param_Lst_1 ?autovar6)) nil) if Cond(var: ?autovar6, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar6, pat: nil)
(append ?autovar6 (cons ?autovar4 (revflat ?autovar5))) => (potential_split ?autovar6 (cons (param_Lst_0 ?autovar6) (param_Lst_1 ?autovar6)) nil) if Cond(var: ?autovar6, pat: (cons ?param_0 ?param_1)) Cond(var: ?autovar6, pat: nil)
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
 ex is: leaf
 ex is: (node autovar_Nat_0 leaf leaf)
 ex is: (node autovar_Nat_1 (node autovar_Nat_0 leaf leaf) (node autovar_Nat_0 leaf leaf))
Running TheSy on datatypes: Lst Tree Nat dict: append rev qreva revflat qrevaflat leq succ zero cons nil node leaf
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
Starting depth 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 2
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0mproved: (leq zero ?ts_ph_Nat_0) => true
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_0 nil) => ?ts_ph_Lst_0
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1

01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
01:11:27 [0m[33m[WARN] [0m# of splitters: 1
Starting depth 2
01:11:29 [0m[33m[WARN] [0m# of splitters: 35
01:11:30 [0m[33m[WARN] [0m# of splitters: 41
01:11:37 [0m[33m[WARN] [0m# of splitters: 21
01:11:40 [0m[33m[WARN] [0mStopped case split due to node limit
01:11:48 [0m[33m[WARN] [0m# of splitters: 36
01:12:14 [0m[33m[WARN] [0m# of splitters: 33
01:12:31 [0m[33m[WARN] [0m# of splitters: 35
01:12:46 [0m[33m[WARN] [0m# of splitters: 32
01:13:11 [0m[33m[WARN] [0m# of splitters: 34
01:13:17 [0m[33m[WARN] [0m# of splitters: 31
01:13:33 [0m[33m[WARN] [0m# of splitters: 33
01:13:42 [0m[33m[WARN] [0m# of splitters: 30
01:13:51 [0m[33m[WARN] [0m# of splitters: 32
01:14:04 [0m[33m[WARN] [0m# of splitters: 29
01:14:17 [0m[33m[WARN] [0m# of splitters: 33
01:14:26 [0m[33m[WARN] [0m# of splitters: 19
01:14:35 [0m[33m[WARN] [0mStopped case split due to node limit
01:14:36 [0m[33m[WARN] [0m# of splitters: 30
01:14:47 [0m[33m[WARN] [0m# of splitters: 27
01:14:58 [0m[33m[WARN] [0m# of splitters: 29
01:15:03 [0m[33m[WARN] [0m# of splitters: 26
01:15:04 [0m[33m[WARN] [0m# of splitters: 28
01:15:15 [0m[33m[WARN] [0m# of splitters: 25
01:15:22 [0m[33m[WARN] [0m# of splitters: 27
01:15:30 [0m[33m[WARN] [0m# of splitters: 24
01:15:42 [0m[33m[WARN] [0m# of splitters: 26
01:15:44 [0m[33m[WARN] [0m# of splitters: 23
01:15:48 [0m[33m[WARN] [0m# of splitters: 25
01:15:55 [0m[33m[WARN] [0m# of splitters: 22
01:15:59 [0m[33m[WARN] [0m# of splitters: 24
01:16:03 [0m[33m[WARN] [0m# of splitters: 21
01:16:07 [0m[33m[WARN] [0m# of splitters: 23
01:16:13 [0m[33m[WARN] [0m# of splitters: 20
01:16:19 [0m[33m[WARN] [0m# of splitters: 22
01:16:25 [0m[33m[WARN] [0m# of splitters: 19
01:16:28 [0m[33m[WARN] [0m# of splitters: 21
01:16:31 [0m[33m[WARN] [0m# of splitters: 18
01:16:38 [0m[33m[WARN] [0m# of splitters: 20
01:16:46 [0m[33m[WARN] [0m# of splitters: 17
01:17:20 [0m[33m[WARN] [0m# of splitters: 19
01:17:22 [0m[33m[WARN] [0m# of splitters: 16
01:17:47 [0m[33m[WARN] [0m# of splitters: 18
01:17:56 [0m[33m[WARN] [0m# of splitters: 15
01:18:07 [0m[33m[WARN] [0mStopped case split due to node limit
01:18:09 [0m[33m[WARN] [0m# of splitters: 17
01:18:12 [0m[33m[WARN] [0m# of splitters: 14
01:18:20 [0m[33m[WARN] [0m# of splitters: 16
01:18:22 [0m[33m[WARN] [0m# of splitters: 13
01:18:28 [0m[33m[WARN] [0m# of splitters: 15
01:18:30 [0m[33m[WARN] [0m# of splitters: 12
01:19:22 [0m[33m[WARN] [0m# of splitters: 12
01:23:38 [0m[33m[WARN] [0m# of splitters: 11
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 2
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
generalizing (append (append ts_ph_Lst_0 ts_ph_Lst_1) ts_ph_Lst_1) = (append ts_ph_Lst_0 (append ts_ph_Lst_1 ts_ph_Lst_1))
01:23:51 [0m[33m[WARN] [0mproved: (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2) => (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2))
01:23:51 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_0 (append ?ts_ph_Lst_1 ?ts_ph_Lst_2)) => (append (append ?ts_ph_Lst_0 ?ts_ph_Lst_1) ?ts_ph_Lst_2)
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
01:23:51 [0m[33m[WARN] [0m# of splitters: 1
proved: (append (revflat ?ts_ph_Tree_0) ?ts_ph_Lst_1) => (qrevaflat ?ts_ph_Tree_0 ?ts_ph_Lst_1)
proved: (qrevaflat ?ts_ph_Tree_0 ?ts_ph_Lst_1) => (append (revflat ?ts_ph_Tree_0) ?ts_ph_Lst_1)
01:23:51 [0m[33m[WARN] [0mFound all lemmas
done in 744614
