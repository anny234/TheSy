Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(less ?x zero) => false
(less zero (succ ?x)) => true
(less (succ ?x) (succ ?y)) => (less ?x ?y)
(less ?x ?y) => (less (succ ?x) (succ ?y))
(plus zero ?n) => ?n
(plus (succ ?n) ?m) => (succ (plus ?n ?m))
(succ (plus ?n ?m)) => (plus (succ ?n) ?m)
(less ?autovar5 (succ ?autovar1)) => (potential_split ?autovar5 (succ (param_Nat_0 ?autovar5)) zero) if Cond(var: ?autovar5, pat: (succ ?param_0)) Cond(var: ?autovar5, pat: zero)
(less ?autovar5 (succ ?autovar3)) => (potential_split ?autovar5 (succ (param_Nat_0 ?autovar5)) zero) if Cond(var: ?autovar5, pat: (succ ?param_0)) Cond(var: ?autovar5, pat: zero)
(less zero ?autovar6) => (potential_split ?autovar6 (succ (param_Nat_0 ?autovar6)) zero) if Cond(var: ?autovar6, pat: (succ ?param_0)) Cond(var: ?autovar6, pat: zero)
(less (succ ?autovar4) ?autovar6) => (potential_split ?autovar6 (succ (param_Nat_0 ?autovar6)) zero) if Cond(var: ?autovar6, pat: (succ ?param_0)) Cond(var: ?autovar6, pat: zero)
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
Running TheSy on datatypes: Nat dict: less plus leq succ zero
01:11:54 [0m[33m[WARN] [0m# of splitters: 1
01:11:54 [0m[33m[WARN] [0m# of splitters: 1
01:11:54 [0m[33m[WARN] [0m# of splitters: 1
01:11:54 [0m[33m[WARN] [0m# of splitters: 1
01:11:54 [0m[33m[WARN] [0m# of splitters: 1
01:11:54 [0m[33m[WARN] [0m# of splitters: 1
proved: (less ?ts_ph_Nat_0 (succ (plus ?ts_ph_Nat_0 ?ts_ph_Nat_2))) => true
01:11:54 [0m[33m[WARN] [0mFound all lemmas
done in 65
