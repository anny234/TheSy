Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(last (cons ?x ?y)) => (ite (= ?y nil) ?x (last ?y))
(ite (= ?y nil) ?x (last ?y)) => (last (cons ?x ?y))
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Nat Lst dict: last leq succ zero cons nil
01:11:54 [0m[33m[WARN] [0m# of splitters: 2
01:11:54 [0m[33m[WARN] [0m# of splitters: 1
01:11:54 [0m[33m[WARN] [0m# of splitters: 1
proved: (not (= ?ts_ph_Lst_0 nil)) |> (last (cons ?ts_ph_Nat_1 ?ts_ph_Lst_0)) => (last ?ts_ph_Lst_0)
01:11:54 [0m[33m[WARN] [0mFound all lemmas
done in 2
