Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(append nil ?x) => ?x
(append (cons ?x2 ?y) ?z) => (cons ?x2 (append ?y ?z))
(cons ?x2 (append ?y ?z)) => (append (cons ?x2 ?y) ?z)
(filter nil) => nil
nil => (filter nil)
(filter (cons ?x3 ?y)) => (ite (P ?x3) (cons ?x3 (filter ?y)) (filter ?y))
(ite (P ?x3) (cons ?x3 (filter ?y)) (filter ?y)) => (filter (cons ?x3 ?y))
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Lst Nat dict: P append filter leq succ zero cons nil
01:15:26 [0m[33m[WARN] [0m# of splitters: 1
proved: (filter (append ?ts_ph_Lst_0 ?ts_ph_Lst_2)) => (append (filter ?ts_ph_Lst_0) (filter ?ts_ph_Lst_2))
proved: (append (filter ?ts_ph_Lst_0) (filter ?ts_ph_Lst_2)) => (filter (append ?ts_ph_Lst_0 ?ts_ph_Lst_2))
01:15:26 [0m[33m[WARN] [0mFound all lemmas
done in 15
