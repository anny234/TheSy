Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(append nil ?x) => ?x
(append (cons ?x2 ?y) ?z) => (cons ?x2 (append ?y ?z))
(cons ?x2 (append ?y ?z)) => (append (cons ?x2 ?y) ?z)
(last (cons ?x3 ?y)) => (ite (= ?y nil) ?x3 (last ?y))
(ite (= ?y nil) ?x3 (last ?y)) => (last (cons ?x3 ?y))
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Lst Nat dict: append last leq succ zero cons nil
01:14:14 [0m[33m[WARN] [0m# of splitters: 2
01:14:14 [0m[33m[WARN] [0m# of splitters: 1
Starting depth 1
01:14:14 [0m[33m[WARN] [0m# of splitters: 2
01:14:14 [0m[33m[WARN] [0m# of splitters: 1
01:14:14 [0m[33m[WARN] [0m# of splitters: 1
01:14:14 [0m[33m[WARN] [0mproved: (append ?ts_ph_Lst_0 nil) => ?ts_ph_Lst_0
01:14:14 [0m[33m[WARN] [0m# of splitters: 1
proved: (= ?ts_ph_Lst_1 nil) |> (last (append ?ts_ph_Lst_0 ?ts_ph_Lst_1)) => (last ?ts_ph_Lst_0)
proved: (= ?ts_ph_Lst_1 nil) |> (last ?ts_ph_Lst_0) => (last (append ?ts_ph_Lst_0 ?ts_ph_Lst_1))
01:14:14 [0m[33m[WARN] [0mFound all lemmas
done in 7
