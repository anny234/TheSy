Collecting statistics
(leq ?__x0 ?__y1) => (or (= ?__x0 ?__y1) (less ?__x0 ?__y1))
(or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) => (leq ?__x0 ?__y1)
(mem ?x nil) => false
(mem ?x (cons ?y ?z)) => (or (= ?x ?y) (mem ?x ?z))
(or (= ?x ?y) (mem ?x ?z)) => (mem ?x (cons ?y ?z))
(ins1 ?i nil) => (cons ?i nil)
(cons ?i nil) => (ins1 ?i nil)
(ins1 ?i (cons ?x ?y2)) => (ite (= ?i ?x) (cons ?x ?y2) (cons ?x (ins1 ?i ?y2)))
(ite (= ?i ?x) (cons ?x ?y2) (cons ?x (ins1 ?i ?y2))) => (ins1 ?i (cons ?x ?y2))
 ex is: zero
 ex is: (succ zero)
 ex is: (succ (succ zero))
 ex is: nil
 ex is: (cons autovar_Nat_0 nil)
 ex is: (cons autovar_Nat_1 (cons autovar_Nat_0 nil))
Running TheSy on datatypes: Nat Lst dict: mem ins1 leq succ zero cons nil
01:32:28 [0m[33m[WARN] [0m# of splitters: 1
proved: (mem ?ts_ph_Nat_1 (ins1 ?ts_ph_Nat_1 ?ts_ph_Lst_0)) => true
01:32:28 [0m[33m[WARN] [0mFound all lemmas
done in 1
