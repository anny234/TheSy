(datatype list2 () ((nil2 list2) (cons2 sk list2 list2)))
(datatype Nat () ((Z Nat) (S Nat Nat)))
(declare-fun zip (list2 list2) list)
(declare-fun take (Nat list2) list2)
(=> rule0 (zip nil2 ?y) nil)
(=> rule1 (zip (cons2 ?z ?x2) nil2) nil)
(=> rule2 (zip (cons2 ?z ?x2) (cons2 ?x3 ?x4)) (cons (pair2 ?z ?x3) (zip ?x2 ?x4)))
(=> rule3 (cons (pair2 ?z ?x3) (zip ?x2 ?x4)) (zip (cons2 ?z ?x2) (cons2 ?x3 ?x4)))
(=> rule4 (take Z ?y) nil2)
(=> rule5 (take (S ?z0) nil2) nil2)
(=> rule6 (take (S ?z1) (cons2 ?x22 ?x33)) (cons2 ?x22 (take ?z1 ?x33)))
(=> rule7 (cons2 ?x22 (take ?z1 ?x33)) (take (S ?z1) (cons2 ?x22 ?x33)))
