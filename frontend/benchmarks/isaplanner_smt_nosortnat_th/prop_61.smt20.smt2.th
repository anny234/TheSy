(datatype list2 () ((nil2 list2) (cons2 sk list2 list2)))
(datatype Nat () ((Z Nat) (S Nat Nat)))
(datatype list () ((nil list) (cons Nat list list)))
(declare-fun last (list) Nat)
(declare-fun lastOfTwo (list list) Nat)
(declare-fun ++ (list2 list2) list2)
(=> rule0 (last nil) Z)
(=> rule1 Z (last nil))
(=> rule2 (last (cons ?y nil)) ?y)
(=> rule3 (last (cons ?y (cons ?x2 ?x3))) (last (cons ?x2 ?x3)))
(=> rule4 (lastOfTwo ?x nil) (last ?x))
(=> rule5 (last ?x) (lastOfTwo ?x nil))
(=> rule6 (lastOfTwo ?x (cons ?z ?x20)) (last (cons ?z ?x20)))
(=> rule7 (++ nil2 ?y1) ?y1)
(=> rule8 (++ (cons2 ?z3 ?xs) ?y2) (cons2 ?z3 (++ ?xs ?y2)))
(=> rule9 (cons2 ?z3 (++ ?xs ?y2)) (++ (cons2 ?z3 ?xs) ?y2))
