(prove (forall ((ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 nil2) ())))
(prove (forall ((ts_ph_Nat_0 U)) (= (take ts_ph_Nat_0 nil2) nil2)))
(prove (forall ((ts_ph_list2_0 U) (ts_ph_Nat_1 U)) (= (take ts_ph_Nat_1 ts_ph_list2_0) (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list2_0)))))
(prove (forall ((ts_ph_list2_0 U) (ts_ph_Nat_1 U)) (= (take ts_ph_Nat_1 (take ts_ph_Nat_1 ts_ph_list2_0)) (take ts_ph_Nat_1 ts_ph_list2_0))))
(prove (forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 (take ts_ph_Nat_1 ts_ph_list2_0)) (zip (take ts_ph_Nat_1 ts_ph_list2_0) ts_ph_list2_0))))
(prove (forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (zip (take ts_ph_Nat_1 ts_ph_list2_0) ts_ph_list2_0) (zip ts_ph_list2_0 (take ts_ph_Nat_1 ts_ph_list2_0)))))
(prove (forall ((ts_ph_list2_0 U) (ts_ph_Nat_1 U)) (= (take ts_ph_Nat_1 ts_ph_list2_0) (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list2_0)))))
(prove (forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (take (S ts_ph_Nat_1) (take ts_ph_Nat_1 ts_ph_list2_0)) (take ts_ph_Nat_1 ts_ph_list2_0))))
(prove (forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (zip (take ts_ph_Nat_1 ts_ph_list2_0) (take ts_ph_Nat_1 ts_ph_list2_0)) (zip ts_ph_list2_0 (take ts_ph_Nat_1 ts_ph_list2_0)))))
(prove (forall ((ts_ph_Nat_1 U) (ts_ph_list2_0 U)) (= (zip ts_ph_list2_0 (take ts_ph_Nat_1 ts_ph_list2_0)) (zip (take ts_ph_Nat_1 ts_ph_list2_0) (take ts_ph_Nat_1 ts_ph_list2_0)))))
