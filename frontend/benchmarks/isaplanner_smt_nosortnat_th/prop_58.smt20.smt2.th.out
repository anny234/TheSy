Collecting statistics
(zip nil2 ?y) => nil
(zip (cons2 ?z ?x2) nil2) => nil
(zip (cons2 ?z ?x2) (cons2 ?x3 ?x4)) => (cons (pair2 ?z ?x3) (zip ?x2 ?x4))
(cons (pair2 ?z ?x3) (zip ?x2 ?x4)) => (zip (cons2 ?z ?x2) (cons2 ?x3 ?x4))
(drop Z ?y) => ?y
(drop (S ?z0) nil2) => nil2
(drop (S ?z1) (cons2 ?x22 ?x33)) => (drop ?z1 ?x33)
(zip ?autovar11 nil2) => (potential_split ?autovar11 nil2 (cons2 (param_list2_0 ?autovar11) (param_list2_1 ?autovar11))) if Cond(var: ?autovar11, pat: nil2) Cond(var: ?autovar11, pat: (cons2 ?param_0 ?param_1))
(zip ?autovar11 (cons2 ?autovar5 ?autovar6)) => (potential_split ?autovar11 nil2 (cons2 (param_list2_0 ?autovar11) (param_list2_1 ?autovar11))) if Cond(var: ?autovar11, pat: nil2) Cond(var: ?autovar11, pat: (cons2 ?param_0 ?param_1))
(zip (cons2 ?autovar7 ?autovar8) ?autovar12) => (potential_split ?autovar12 nil2 (cons2 (param_list2_0 ?autovar12) (param_list2_1 ?autovar12))) if Cond(var: ?autovar12, pat: nil2) Cond(var: ?autovar12, pat: (cons2 ?param_0 ?param_1))
(zip (cons2 ?autovar9 ?autovar10) ?autovar12) => (potential_split ?autovar12 nil2 (cons2 (param_list2_0 ?autovar12) (param_list2_1 ?autovar12))) if Cond(var: ?autovar12, pat: nil2) Cond(var: ?autovar12, pat: (cons2 ?param_0 ?param_1))
(drop ?autovar7 nil2) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(drop ?autovar7 (cons2 ?autovar3 ?autovar4)) => (potential_split ?autovar7 Z (S (param_Nat_0 ?autovar7))) if Cond(var: ?autovar7, pat: Z) Cond(var: ?autovar7, pat: (S ?param_0))
(drop (S ?autovar5) ?autovar8) => (potential_split ?autovar8 nil2 (cons2 (param_list2_0 ?autovar8) (param_list2_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil2) Cond(var: ?autovar8, pat: (cons2 ?param_0 ?param_1))
(drop (S ?autovar6) ?autovar8) => (potential_split ?autovar8 nil2 (cons2 (param_list2_0 ?autovar8) (param_list2_1 ?autovar8))) if Cond(var: ?autovar8, pat: nil2) Cond(var: ?autovar8, pat: (cons2 ?param_0 ?param_1))
 ex is: nil2
 ex is: (cons2 autovar_sk_0 nil2)
 ex is: (cons2 autovar_sk_1 (cons2 autovar_sk_0 nil2))
 ex is: Z
 ex is: (S Z)
 ex is: (S (S Z))
Running TheSy on datatypes: Nat list2 dict: zip drop nil2 cons2 Z S
Starting depth 1
08:23:50 [0m[33m[WARN] [0m# of splitters: 4
08:23:50 [0m[33m[WARN] [0m# of splitters: 3
08:23:50 [0m[33m[WARN] [0m# of splitters: 4
08:23:50 [0m[33m[WARN] [0m# of splitters: 2
08:23:50 [0m[33m[WARN] [0m# of splitters: 3
08:23:50 [0m[33m[WARN] [0m# of splitters: 1
08:23:50 [0m[33m[WARN] [0m# of splitters: 2
08:23:50 [0m[33m[WARN] [0m# of splitters: 1
08:23:50 [0m[33m[WARN] [0mproved: (drop ?ts_ph_Nat_0 nil2) => nil2
08:23:50 [0m[33m[WARN] [0mproved: (zip ?ts_ph_list2_0 nil2) => nil
Starting depth 2
08:23:50 [0m[33m[WARN] [0m# of splitters: 16
08:23:50 [0m[33m[WARN] [0m# of splitters: 11
08:23:50 [0m[33m[WARN] [0m# of splitters: 15
08:23:50 [0m[33m[WARN] [0m# of splitters: 10
08:23:50 [0m[33m[WARN] [0m# of splitters: 14
08:23:50 [0m[33m[WARN] [0m# of splitters: 11
08:23:51 [0m[33m[WARN] [0m# of splitters: 14
08:23:51 [0m[33m[WARN] [0m# of splitters: 10
08:23:51 [0m[33m[WARN] [0m# of splitters: 13
08:23:51 [0m[33m[WARN] [0m# of splitters: 11
08:23:51 [0m[33m[WARN] [0m# of splitters: 12
08:23:51 [0m[33m[WARN] [0m# of splitters: 9
08:23:51 [0m[33m[WARN] [0m# of splitters: 10
08:23:51 [0m[33m[WARN] [0m# of splitters: 9
08:23:51 [0m[33m[WARN] [0m# of splitters: 10
08:23:51 [0m[33m[WARN] [0m# of splitters: 8
08:23:51 [0m[33m[WARN] [0m# of splitters: 9
08:23:51 [0m[33m[WARN] [0m# of splitters: 7
08:23:51 [0m[33m[WARN] [0m# of splitters: 8
08:23:51 [0m[33m[WARN] [0m# of splitters: 6
08:23:51 [0m[33m[WARN] [0m# of splitters: 7
08:23:51 [0m[33m[WARN] [0m# of splitters: 4
08:23:51 [0m[33m[WARN] [0m# of splitters: 5
08:23:51 [0m[33m[WARN] [0m# of splitters: 4
08:23:51 [0m[33m[WARN] [0m# of splitters: 5
08:23:51 [0m[33m[WARN] [0m# of splitters: 2
08:23:51 [0m[33m[WARN] [0m# of splitters: 1
08:23:51 [0m[33m[WARN] [0m# of splitters: 2
08:23:51 [0m[33m[WARN] [0m# of splitters: 2
08:23:51 [0m[33m[WARN] [0m# of splitters: 1
08:23:51 [0m[33m[WARN] [0m# of splitters: 2
08:23:51 [0m[33m[WARN] [0m# of splitters: 1
08:23:51 [0m[33m[WARN] [0mproved: (drop (S ?ts_ph_Nat_1) ?ts_ph_list2_0) => (drop (S Z) (drop ?ts_ph_Nat_1 ?ts_ph_list2_0))
08:23:51 [0m[33m[WARN] [0mproved: (drop (S Z) (drop ?ts_ph_Nat_1 ?ts_ph_list2_0)) => (drop (S ?ts_ph_Nat_1) ?ts_ph_list2_0)

08:23:51 [0m[33m[WARN] [0m# of splitters: 4
08:23:51 [0m[33m[WARN] [0m# of splitters: 2
08:23:51 [0m[33m[WARN] [0m# of splitters: 5
08:23:51 [0m[33m[WARN] [0m# of splitters: 7
08:23:51 [0m[33m[WARN] [0m# of splitters: 3
08:23:51 [0m[33m[WARN] [0m# of splitters: 9
08:23:51 [0m[33m[WARN] [0m# of splitters: 2
08:23:51 [0m[33m[WARN] [0m# of splitters: 4
08:23:52 [0m[33m[WARN] [0mproved: (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_list2_1)) => (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_list2_1))
08:23:52 [0m[33m[WARN] [0mproved: (drop ?ts_ph_Nat_0 (drop ?ts_ph_Nat_1 ?ts_ph_list2_1)) => (drop ?ts_ph_Nat_1 (drop ?ts_ph_Nat_0 ?ts_ph_list2_1))

08:23:52 [0m[33m[WARN] [0m# of splitters: 3
08:23:52 [0m[33m[WARN] [0m# of splitters: 1
08:23:52 [0m[33m[WARN] [0m# of splitters: 10
08:23:52 [0m[33m[WARN] [0m# of splitters: 3
08:23:52 [0m[33m[WARN] [0m# of splitters: 1
08:23:52 [0m[33m[WARN] [0m# of splitters: 2
08:23:52 [0m[33m[WARN] [0m# of splitters: 3
08:23:52 [0m[33m[WARN] [0m# of splitters: 1
08:23:52 [0m[33m[WARN] [0m# of splitters: 11
08:23:52 [0m[33m[WARN] [0m# of splitters: 3
08:23:52 [0m[33m[WARN] [0m# of splitters: 1
done in 1832
