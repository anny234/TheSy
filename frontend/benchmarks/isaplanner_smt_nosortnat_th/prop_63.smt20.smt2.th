(datatype list2 () ((nil2 list2) (cons2 sk list2 list2)))
(datatype Nat () ((Z Nat) (S Nat Nat)))
(datatype list () ((nil list) (cons Nat list list)))
(declare-fun len (list2) Nat)
(declare-fun last (list) Nat)
(declare-fun drop (Nat list2) list2)
(declare-fun <2 (Nat Nat) Bool)
(=> rule0 (last nil) Z)
(=> rule1 Z (last nil))
(=> rule2 (last (cons ?y nil)) ?y)
(=> rule3 (last (cons ?y (cons ?x2 ?x3))) (last (cons ?x2 ?x3)))
(=> rule4 (<2 ?x Z) false)
(=> rule5 (<2 Z (S ?z)) true)
(=> rule6 (<2 (S ?x2) (S ?z)) (<2 ?x2 ?z))
(=> rule7 (<2 ?x2 ?z) (<2 (S ?x2) (S ?z)))
(=> rule8 (len nil2) Z)
(=> rule9 Z (len nil2))
(=> rule10 (len (cons2 ?y0 ?xs)) (S (len ?xs)))
(=> rule11 (drop Z ?y1) ?y1)
(=> rule12 (drop (S ?z) nil2) nil2)
(=> rule13 (drop (S ?z) (cons2 ?x22 ?x33)) (drop ?z ?x33))
