(datatype list2 () ((nil2 list2) (cons2 sk list2 list2)))
(datatype Nat () ((Z Nat) (S Nat Nat)))
(datatype list () ((nil list) (cons Nat list list)))
(declare-fun last (list) Nat)
(declare-fun butlast (list2) list2)
(declare-fun ++ (list2 list2) list2)
(=> rule0 (last nil) Z)
(=> rule1 Z (last nil))
(=> rule2 (last (cons ?y nil)) ?y)
(=> rule3 (last (cons ?y (cons ?x2 ?x3))) (last (cons ?x2 ?x3)))
(=> rule4 (butlast nil2) nil2)
(=> rule5 nil2 (butlast nil2))
(=> rule6 (butlast (cons2 ?y0 nil2)) nil2)
(=> rule7 (butlast (cons2 ?y1 (cons2 ?x22 ?x33))) (cons2 ?y1 (butlast (cons2 ?x22 ?x33))))
(=> rule8 (cons2 ?y1 (butlast (cons2 ?x22 ?x33))) (butlast (cons2 ?y1 (cons2 ?x22 ?x33))))
(=> rule9 (++ nil2 ?y4) ?y4)
(=> rule10 (++ (cons2 ?z ?xs) ?y5) (cons2 ?z (++ ?xs ?y5)))
(=> rule11 (cons2 ?z (++ ?xs ?y5)) (++ (cons2 ?z ?xs) ?y5))
