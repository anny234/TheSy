(declare-sort sk2 0)
(declare-sort sk 0)
(declare-datatype list2 ((nil2) (cons2 (head2 sk) (tail2 list2))))
(declare-datatype Nat ((Z) (S (proj1-S Nat))))
(declare-datatype list ((nil) (cons (head Nat) (tail list))))
(declare-fun last (list) Nat)
(declare-fun butlast (list2) list2)
(declare-fun ++ (list2 list2) list2)
(assert (= (last nil) Z))
(assert (forall ((y Nat)) (= (last (cons y nil)) y)))
(assert
  (forall ((y Nat) (x2 Nat) (x3 list))
    (= (last (cons y (cons x2 x3))) (last (cons x2 x3)))))
(assert (= (butlast nil2) nil2))
(assert (forall ((y sk)) (= (butlast (cons2 y nil2)) nil2)))
(assert
  (forall ((y sk) (x2 sk) (x3 list2))
    (= (butlast (cons2 y (cons2 x2 x3)))
      (cons2 y (butlast (cons2 x2 x3))))))
(assert (forall ((y list2)) (= (++ nil2 y) y)))
(assert
  (forall ((y list2) (z sk) (xs list2))
    (= (++ (cons2 z xs) y) (cons2 z (++ xs y)))))
