(include nat)
(include nat.res)

(declare-fun tri (Nat) Nat)

(=> tri_base (tri zero) zero)
(=> tri_ind_1 (tri (succ ?n)) (plus (tri ?n) (succ ?n)))
(=> tri_ind_2 (plus (tri ?n) (succ ?n)) (tri (succ ?n)))

(declare-fun cubes (Nat) Nat)

(=> cubes_base (cubes zero) zero)
(=> cubes_ind_1 (cubes (succ ?n)) (plus (cubes ?n) (mult (succ ?n) (mult (succ ?n) (succ ?n)))))
(=> cubes_ind_2 (plus (cubes ?n) (mult (succ ?n) (mult (succ ?n) (succ ?n)))) (cubes (succ ?n)))
